
The following have been reloaded with a version change:
  1) GCCcore/8.3.0 => GCCcore/9.3.0
  2) binutils/2.32-GCCcore-8.3.0 => binutils/2.34-GCCcore-9.3.0
  3) zlib/1.2.11-GCCcore-8.3.0 => zlib/1.2.11-GCCcore-9.3.0

2021-02-01 00:40:15 | INFO | fairseq_cli.train | Namespace(activation_dropout=0.0, activation_fn='relu', adam_betas='(0.9, 0.98)', adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, arch='transformer_vaswani_wmt_en_de_big', attention_dropout=0.0, best_checkpoint_metric='loss', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_suffix='', clip_norm=0.0, cpu=False, criterion='label_smoothed_cross_entropy', cross_self_attention=False, curriculum=0, data='../../../data-bin/custom_GNOME/orig_GNOME', data_buffer_size=10, dataset_impl=None, ddp_backend='c10d', decoder_attention_heads=16, decoder_embed_dim=1024, decoder_embed_path=None, decoder_ffn_embed_dim=4096, decoder_input_dim=1024, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=False, decoder_normalize_before=False, decoder_output_dim=1024, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', dropout=0.2, empty_cache_freq=0, encoder_attention_heads=16, encoder_embed_dim=1024, encoder_embed_path=None, encoder_ffn_embed_dim=8192, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=False, encoder_normalize_before=False, eval_bleu=True, eval_bleu_args='{"beam": 5, "max_len_a": 1.2, "max_len_b": 10}', eval_bleu_detok='moses', eval_bleu_detok_args=None, eval_bleu_print_samples=True, eval_bleu_remove_bpe='@@ ', eval_tokenized_bleu=False, fast_stat_sync=False, find_unused_parameters=False, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=True, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, label_smoothing=0.1, layernorm_embedding=False, left_pad_source='True', left_pad_target='False', load_alignments=False, localsgd_frequency=3, log_format=None, log_interval=100, lr=[0.000175], lr_scheduler='inverse_sqrt', max_epoch=30, max_sentences=None, max_sentences_valid=None, max_source_positions=1024, max_target_positions=1024, max_tokens=1024, max_tokens_valid=1024, max_update=0, maximize_best_checkpoint_metric=False, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=-1, model_parallel_size=1, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=True, no_token_positional_embeddings=False, nprocs_per_node=1, num_batch_buckets=0, num_workers=1, optimizer='adam', optimizer_overrides='{}', patience=-1, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, required_batch_size_multiple=8, reset_dataloader=True, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=True, restore_file='../../../models/wmt19.de-en.joined-dict.ensemble//model1.pt', save_dir='../checkpoints/GNOME_18', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, share_all_embeddings=False, share_decoder_input_output_embed=True, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang=None, stop_time_hours=0, target_lang=None, task='translation', tensorboard_logdir='', threshold_loss_scale=None, tie_adaptive_weights=False, tokenizer=None, tpu=False, train_subset='train', truncate_source=False, update_freq=[1], upsample_primary=1, use_bmuf=False, use_old_adam=False, user_dir=None, valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, warmup_init_lr=-1, warmup_updates=4000, weight_decay=0.0)
2021-02-01 00:40:15 | INFO | fairseq.tasks.translation | [de] dictionary: 42024 types
2021-02-01 00:40:15 | INFO | fairseq.tasks.translation | [en] dictionary: 42024 types
2021-02-01 00:40:15 | INFO | fairseq.data.data_utils | loaded 151 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/valid.de-en.de
2021-02-01 00:40:15 | INFO | fairseq.data.data_utils | loaded 151 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/valid.de-en.en
2021-02-01 00:40:15 | INFO | fairseq.tasks.translation | ../../../data-bin/custom_GNOME/orig_GNOME valid de-en 151 examples
2021-02-01 00:40:18 | INFO | fairseq_cli.train | TransformerModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(42024, 1024, padding_idx=1)
    (embed_positions): SinusoidalPositionalEmbedding()
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(42024, 1024, padding_idx=1)
    (embed_positions): SinusoidalPositionalEmbedding()
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
    )
    (output_projection): Linear(in_features=1024, out_features=42024, bias=False)
  )
)
2021-02-01 00:40:18 | INFO | fairseq_cli.train | model transformer_vaswani_wmt_en_de_big, criterion LabelSmoothedCrossEntropyCriterion
2021-02-01 00:40:18 | INFO | fairseq_cli.train | num. model params: 312778752 (num. trained: 312778752)
2021-02-01 00:40:22 | INFO | fairseq.trainer | detected shared parameter: decoder.embed_tokens.weight <- decoder.output_projection.weight
2021-02-01 00:40:22 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2021-02-01 00:40:22 | INFO | fairseq.utils | rank   0: capabilities =  7.0  ; total memory = 32.000 GB ; name = GRID V100D-32Q                          
2021-02-01 00:40:22 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2021-02-01 00:40:22 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2021-02-01 00:40:22 | INFO | fairseq_cli.train | max tokens per GPU = 1024 and max sentences per GPU = None
2021-02-01 00:40:23 | INFO | fairseq.trainer | loaded checkpoint ../../../models/wmt19.de-en.joined-dict.ensemble//model1.pt (epoch 16 @ 0 updates)
2021-02-01 00:40:23 | INFO | fairseq.trainer | loading train data for epoch 1
2021-02-01 00:40:23 | INFO | fairseq.data.data_utils | loaded 10001 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/train.de-en.de
2021-02-01 00:40:23 | INFO | fairseq.data.data_utils | loaded 10001 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/train.de-en.en
2021-02-01 00:40:23 | INFO | fairseq.tasks.translation | ../../../data-bin/custom_GNOME/orig_GNOME train de-en 10001 examples
2021-02-01 00:40:24 | INFO | fairseq_cli.train | begin training epoch 1
2021-02-01 00:40:24 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 64.0
2021-02-01 00:40:24 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 32.0
2021-02-01 00:40:25 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 16.0
2021-02-01 00:40:25 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 8.0
2021-02-01 00:40:33 | INFO | train_inner | epoch 001:    104 / 416 loss=4.257, nll_loss=2.631, ppl=6.2, wps=6560.9, ups=10.29, wpb=635.8, bsz=21.9, num_updates=100, lr=4.375e-06, gnorm=6.738, loss_scale=11, train_wall=10, wall=12
2021-02-01 00:40:43 | INFO | train_inner | epoch 001:    204 / 416 loss=4.251, nll_loss=2.632, ppl=6.2, wps=7028.7, ups=10.76, wpb=653.3, bsz=23.4, num_updates=200, lr=8.75e-06, gnorm=5.463, loss_scale=8, train_wall=9, wall=21
2021-02-01 00:40:52 | INFO | train_inner | epoch 001:    304 / 416 loss=3.868, nll_loss=2.197, ppl=4.59, wps=6908.4, ups=10.74, wpb=643.1, bsz=22.4, num_updates=300, lr=1.3125e-05, gnorm=4.604, loss_scale=8, train_wall=9, wall=30
2021-02-01 00:41:01 | INFO | train_inner | epoch 001:    404 / 416 loss=3.706, nll_loss=2.014, ppl=4.04, wps=7310.8, ups=10.72, wpb=682, bsz=28.8, num_updates=400, lr=1.75e-05, gnorm=4.735, loss_scale=8, train_wall=9, wall=40
2021-02-01 00:41:03 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:41:03 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:41:03 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:41:03 | INFO | fairseq.tasks.translation | example hypothesis: Use an online WebDAV task or memo list.
2021-02-01 00:41:03 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:41:04 | INFO | fairseq.tasks.translation | example hypothesis: To remove an email address from your list of unwanted senders in Novell Groupwise.
2021-02-01 00:41:04 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:41:05 | INFO | fairseq.tasks.translation | example hypothesis: Set the conditions for the rule. For each condition, you must first select which part of the message to check, then define the comparison.
2021-02-01 00:41:05 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:41:05 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as undesirable, the sender is added to your list of undesirable senders. Each time you mark messages as desirable, the sender is removed from your list of undesirable senders.
2021-02-01 00:41:05 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:41:06 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local hard disk, but other connections often only download the headers, and everything else only if you really want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have selected to store.
2021-02-01 00:41:06 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:41:07 | INFO | fairseq.tasks.translation | example hypothesis: Shared notes are basically messages that are scheduled for a special day and appear in the calendar on that date. You can use common notes to display holidays, holidays, paydays, birthdays, etc. Shared notes are transferred to your calendar at the specified time. They will not appear in your or another user's mailbox.
2021-02-01 00:41:07 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:41:09 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution only evaluates its first appearance, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineeringUNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then again as UNKNOWNTOKENINHYP marketingUNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. Use regular expressions to filter messages that define the same headers more than once.
2021-02-01 00:41:09 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:41:09 | INFO | valid | epoch 001 | valid on 'valid' subset | loss 3.499 | nll_loss 1.761 | ppl 3.39 | bleu 34.73 | wps 662.1 | wpb 525.5 | bsz 18.9 | num_updates 412
2021-02-01 00:41:09 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:41:27 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 1 @ 412 updates, score 3.499) (writing took 17.725262901745737 seconds)
2021-02-01 00:41:27 | INFO | fairseq_cli.train | end of epoch 1 (average epoch stats below)
2021-02-01 00:41:27 | INFO | train | epoch 001 | loss 4.019 | nll_loss 2.367 | ppl 5.16 | wps 4270.9 | ups 6.54 | wpb 652.5 | bsz 24.2 | num_updates 412 | lr 1.8025e-05 | gnorm 5.371 | loss_scale 9 | train_wall 38 | wall 65
2021-02-01 00:41:27 | INFO | fairseq_cli.train | begin training epoch 1
2021-02-01 00:41:35 | INFO | train_inner | epoch 002:     88 / 416 loss=3.536, nll_loss=1.818, ppl=3.53, wps=1972, ups=2.98, wpb=662.5, bsz=26.9, num_updates=500, lr=2.1875e-05, gnorm=4.193, loss_scale=8, train_wall=9, wall=73
2021-02-01 00:41:44 | INFO | train_inner | epoch 002:    188 / 416 loss=3.532, nll_loss=1.811, ppl=3.51, wps=7049, ups=10.77, wpb=654.5, bsz=25.2, num_updates=600, lr=2.625e-05, gnorm=4.85, loss_scale=8, train_wall=9, wall=83
2021-02-01 00:41:53 | INFO | train_inner | epoch 002:    288 / 416 loss=3.476, nll_loss=1.748, ppl=3.36, wps=7015, ups=10.96, wpb=640.2, bsz=22.1, num_updates=700, lr=3.0625e-05, gnorm=4.01, loss_scale=8, train_wall=9, wall=92
2021-02-01 00:42:03 | INFO | train_inner | epoch 002:    388 / 416 loss=3.572, nll_loss=1.854, ppl=3.62, wps=6857.5, ups=10.73, wpb=639.3, bsz=21.7, num_updates=800, lr=3.5e-05, gnorm=4.393, loss_scale=8, train_wall=9, wall=101
2021-02-01 00:42:05 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:42:06 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:42:06 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:42:06 | INFO | fairseq.tasks.translation | example hypothesis: Use an online WebDAV task or memo list.
2021-02-01 00:42:06 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:42:07 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your list of unwanted senders in Novell Groupwise.
2021-02-01 00:42:07 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:42:08 | INFO | fairseq.tasks.translation | example hypothesis: Set the conditions for the rule. For each condition, you need to first select which part of the message to check, then define the comparison.
2021-02-01 00:42:08 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:42:08 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk, the sender is added to your junk list. Each time you mark messages as junk, the sender is removed from your junk list.
2021-02-01 00:42:08 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:42:09 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local hard disk, but other connections often download only the headers, and everything else until you actually want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:42:09 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:42:10 | INFO | fairseq.tasks.translation | example hypothesis: Shared memos are basically messages that are scheduled for a special day and appear in the calendar on that date. You can use shared memos to represent holidays, vacations, paydays, birthdays, etc. Shared memos are sent to your calendar at the specified time. They will not appear in your or another user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:42:10 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:42:12 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution evaluates only its first occurrence, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineering UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then redefines it as UNKNOWNTOKENINHYP marketing UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. Use regular expressions to filter messages that define the same headers more than once.
2021-02-01 00:42:12 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:42:12 | INFO | valid | epoch 002 | valid on 'valid' subset | loss 3.227 | nll_loss 1.448 | ppl 2.73 | bleu 40.25 | wps 660.1 | wpb 525.5 | bsz 18.9 | num_updates 828 | best_loss 3.227
2021-02-01 00:42:12 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:42:36 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 2 @ 828 updates, score 3.227) (writing took 24.435144690796733 seconds)
2021-02-01 00:42:36 | INFO | fairseq_cli.train | end of epoch 2 (average epoch stats below)
2021-02-01 00:42:36 | INFO | train | epoch 002 | loss 3.492 | nll_loss 1.767 | ppl 3.4 | wps 3897.1 | ups 5.97 | wpb 652.3 | bsz 24 | num_updates 828 | lr 3.6225e-05 | gnorm 4.28 | loss_scale 8 | train_wall 38 | wall 135
2021-02-01 00:42:36 | INFO | fairseq_cli.train | begin training epoch 2
2021-02-01 00:42:43 | INFO | train_inner | epoch 003:     72 / 416 loss=3.227, nll_loss=1.466, ppl=2.76, wps=1676.4, ups=2.47, wpb=677.8, bsz=26.1, num_updates=900, lr=3.9375e-05, gnorm=3.725, loss_scale=8, train_wall=9, wall=141
2021-02-01 00:42:52 | INFO | train_inner | epoch 003:    172 / 416 loss=3.13, nll_loss=1.359, ppl=2.57, wps=6913.5, ups=10.73, wpb=644.5, bsz=23.9, num_updates=1000, lr=4.375e-05, gnorm=3.432, loss_scale=8, train_wall=9, wall=151
2021-02-01 00:43:02 | INFO | train_inner | epoch 003:    272 / 416 loss=3.139, nll_loss=1.368, ppl=2.58, wps=6908.9, ups=10.95, wpb=631.1, bsz=21.8, num_updates=1100, lr=4.8125e-05, gnorm=3.619, loss_scale=8, train_wall=9, wall=160
2021-02-01 00:43:11 | INFO | train_inner | epoch 003:    372 / 416 loss=3.152, nll_loss=1.381, ppl=2.6, wps=7298.1, ups=10.78, wpb=677, bsz=25, num_updates=1200, lr=5.25e-05, gnorm=3.647, loss_scale=8, train_wall=9, wall=169
2021-02-01 00:43:15 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:43:15 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:43:15 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:43:16 | INFO | fairseq.tasks.translation | example hypothesis: Use an online WebDAV task list or memo list.
2021-02-01 00:43:16 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:43:17 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk list in Novell Groupwise.
2021-02-01 00:43:17 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:43:17 | INFO | fairseq.tasks.translation | example hypothesis: Set the conditions for the rule. For each condition, you first select which part of the message is checked, then define the comparison.
2021-02-01 00:43:17 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:43:18 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk, the sender is added to your junk list. Each time you mark messages as junk, the sender is removed from your junk list.
2021-02-01 00:43:18 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:43:19 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local system, but other connections usually download only the headers, and the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:43:19 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:43:20 | INFO | fairseq.tasks.translation | example hypothesis: Shared memos are basically messages scheduled for a special day that appear in the calendar on that date. You can use shared memos to represent holidays, vacations, pay days, birthdays, and so on. Shared memos will be entered into your calendar at the specified time. They will not appear in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:43:20 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:43:21 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution evaluates its first occurrence only, even if the message defines the header differently the second time around. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineering UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then redefines it as UNKNOWNTOKENINHYP marketing UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. Use regular expressions to filter messages that define the same headers more than once.
2021-02-01 00:43:21 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:43:22 | INFO | valid | epoch 003 | valid on 'valid' subset | loss 2.994 | nll_loss 1.174 | ppl 2.26 | bleu 45.65 | wps 660.1 | wpb 525.5 | bsz 18.9 | num_updates 1244 | best_loss 2.994
2021-02-01 00:43:22 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:43:46 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 3 @ 1244 updates, score 2.994) (writing took 24.68560007493943 seconds)
2021-02-01 00:43:46 | INFO | fairseq_cli.train | end of epoch 3 (average epoch stats below)
2021-02-01 00:43:46 | INFO | train | epoch 003 | loss 3.165 | nll_loss 1.396 | ppl 2.63 | wps 3882.8 | ups 5.95 | wpb 652.3 | bsz 24 | num_updates 1244 | lr 5.4425e-05 | gnorm 3.684 | loss_scale 8 | train_wall 38 | wall 204
2021-02-01 00:43:46 | INFO | fairseq_cli.train | begin training epoch 3
2021-02-01 00:43:52 | INFO | train_inner | epoch 004:     56 / 416 loss=3.005, nll_loss=1.214, ppl=2.32, wps=1579.2, ups=2.46, wpb=642.4, bsz=24.1, num_updates=1300, lr=5.6875e-05, gnorm=3.637, loss_scale=8, train_wall=9, wall=210
2021-02-01 00:44:01 | INFO | train_inner | epoch 004:    156 / 416 loss=2.929, nll_loss=1.126, ppl=2.18, wps=6983.4, ups=10.79, wpb=647.3, bsz=24.6, num_updates=1400, lr=6.125e-05, gnorm=3.131, loss_scale=8, train_wall=9, wall=219
2021-02-01 00:44:10 | INFO | train_inner | epoch 004:    256 / 416 loss=3.025, nll_loss=1.235, ppl=2.35, wps=6933.9, ups=10.68, wpb=649, bsz=22.9, num_updates=1500, lr=6.5625e-05, gnorm=3.971, loss_scale=8, train_wall=9, wall=228
2021-02-01 00:44:19 | INFO | train_inner | epoch 004:    356 / 416 loss=2.885, nll_loss=1.08, ppl=2.11, wps=6962.8, ups=10.94, wpb=636.6, bsz=22.2, num_updates=1600, lr=7e-05, gnorm=3.267, loss_scale=8, train_wall=9, wall=238
2021-02-01 00:44:25 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:44:26 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether the message has an attachment.
2021-02-01 00:44:26 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:44:26 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task or memo list.
2021-02-01 00:44:26 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:44:27 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your list of unwanted senders on Novell Groupwise.
2021-02-01 00:44:27 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:44:27 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked, then define the comparison.
2021-02-01 00:44:27 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:44:28 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk mail, the sender is added to your list of unwanted senders. Each time you mark messages as junk mail, the sender is removed from your list of unwanted senders.
2021-02-01 00:44:28 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:44:29 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local system, but other connections usually download just the headers, and the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:44:29 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:44:30 | INFO | fairseq.tasks.translation | example hypothesis: Shared memos are basically messages scheduled for a special date in the calendar on that date. You can use shared memos to display vacations, vacations, pay days, birthdays, etc. Posted shared memos will be entered into your calendar at the date specified. They will not appear in your mailbox or any other user UNKNOWNTOKENINHYP s.
2021-02-01 00:44:30 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:44:32 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution evaluates only the first occurrence, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineering _ example.com UNKNOWNTOKENINHYP and then redefines it as UNKNOWNTOKENINHYP marketing _ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second one did not exist. To filter messages that define the same headers more than once, use regular expressions.
2021-02-01 00:44:32 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:44:32 | INFO | valid | epoch 004 | valid on 'valid' subset | loss 2.816 | nll_loss 0.971 | ppl 1.96 | bleu 52.95 | wps 638.7 | wpb 525.5 | bsz 18.9 | num_updates 1660 | best_loss 2.816
2021-02-01 00:44:32 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:44:53 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 4 @ 1660 updates, score 2.816) (writing took 21.63994156755507 seconds)
2021-02-01 00:44:53 | INFO | fairseq_cli.train | end of epoch 4 (average epoch stats below)
2021-02-01 00:44:53 | INFO | train | epoch 004 | loss 2.92 | nll_loss 1.117 | ppl 2.17 | wps 4037.1 | ups 6.19 | wpb 652.3 | bsz 24 | num_updates 1660 | lr 7.2625e-05 | gnorm 3.376 | loss_scale 8 | train_wall 38 | wall 272
2021-02-01 00:44:53 | INFO | fairseq_cli.train | begin training epoch 4
2021-02-01 00:44:57 | INFO | train_inner | epoch 005:     40 / 416 loss=2.791, nll_loss=0.972, ppl=1.96, wps=1776.4, ups=2.65, wpb=671.6, bsz=26.7, num_updates=1700, lr=7.4375e-05, gnorm=3.061, loss_scale=8, train_wall=9, wall=275
2021-02-01 00:45:06 | INFO | train_inner | epoch 005:    140 / 416 loss=2.665, nll_loss=0.826, ppl=1.77, wps=7013.8, ups=10.72, wpb=654.2, bsz=23.4, num_updates=1800, lr=7.875e-05, gnorm=3.042, loss_scale=8, train_wall=9, wall=285
2021-02-01 00:45:16 | INFO | train_inner | epoch 005:    240 / 416 loss=2.769, nll_loss=0.947, ppl=1.93, wps=7081.2, ups=10.64, wpb=665.4, bsz=22.4, num_updates=1900, lr=8.3125e-05, gnorm=2.768, loss_scale=8, train_wall=9, wall=294
2021-02-01 00:45:25 | INFO | train_inner | epoch 005:    340 / 416 loss=2.842, nll_loss=1.029, ppl=2.04, wps=6847.7, ups=10.65, wpb=642.8, bsz=24.1, num_updates=2000, lr=8.75e-05, gnorm=3.837, loss_scale=8, train_wall=9, wall=304
2021-02-01 00:45:32 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:45:33 | INFO | fairseq.tasks.translation | example hypothesis: Filters based on whether the message has an attachment.
2021-02-01 00:45:33 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:45:33 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:45:33 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:45:34 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk list in Novell Groupwise.
2021-02-01 00:45:34 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:45:35 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked, then define the comparison.
2021-02-01 00:45:35 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:45:35 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk mail, the sender is added to your junk list. Each time you mark messages as junk mail, the sender is removed from your junk list.
2021-02-01 00:45:35 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:45:36 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution fetches the unread messages from the folders you have chosen to store.
2021-02-01 00:45:36 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:45:38 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are, in principle, messages scheduled for a particular day that appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your calendar on the dates you specify. They will not appear in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:45:38 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:45:39 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header multiple times, Evolution evaluates only the first instance, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: UNKNOWNTOKENINHYP header as UNKNOWNTOKENINHYP engineering UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. To filter messages that define the same headers multiple times, use a regular expression.
2021-02-01 00:45:39 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:45:39 | INFO | valid | epoch 005 | valid on 'valid' subset | loss 2.655 | nll_loss 0.775 | ppl 1.71 | bleu 61.87 | wps 627.3 | wpb 525.5 | bsz 18.9 | num_updates 2076 | best_loss 2.655
2021-02-01 00:45:39 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:46:01 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 5 @ 2076 updates, score 2.655) (writing took 21.453588522970676 seconds)
2021-02-01 00:46:01 | INFO | fairseq_cli.train | end of epoch 5 (average epoch stats below)
2021-02-01 00:46:01 | INFO | train | epoch 005 | loss 2.744 | nll_loss 0.917 | ppl 1.89 | wps 4033.9 | ups 6.18 | wpb 652.3 | bsz 24 | num_updates 2076 | lr 9.0825e-05 | gnorm 3.203 | loss_scale 8 | train_wall 38 | wall 339
2021-02-01 00:46:01 | INFO | fairseq_cli.train | begin training epoch 5
2021-02-01 00:46:03 | INFO | train_inner | epoch 006:     24 / 416 loss=2.653, nll_loss=0.817, ppl=1.76, wps=1729.5, ups=2.65, wpb=652, bsz=24.9, num_updates=2100, lr=9.1875e-05, gnorm=3.079, loss_scale=8, train_wall=9, wall=341
2021-02-01 00:46:12 | INFO | train_inner | epoch 006:    124 / 416 loss=2.56, nll_loss=0.709, ppl=1.64, wps=7141.6, ups=10.75, wpb=664.5, bsz=25.9, num_updates=2200, lr=9.625e-05, gnorm=2.924, loss_scale=8, train_wall=9, wall=351
2021-02-01 00:46:22 | INFO | train_inner | epoch 006:    224 / 416 loss=2.613, nll_loss=0.765, ppl=1.7, wps=6899.1, ups=10.81, wpb=638.2, bsz=23.1, num_updates=2300, lr=0.000100625, gnorm=3.434, loss_scale=8, train_wall=9, wall=360
2021-02-01 00:46:31 | INFO | train_inner | epoch 006:    324 / 416 loss=2.699, nll_loss=0.866, ppl=1.82, wps=7150.8, ups=10.82, wpb=661, bsz=25.3, num_updates=2400, lr=0.000105, gnorm=3.46, loss_scale=8, train_wall=9, wall=369
2021-02-01 00:46:39 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:46:40 | INFO | fairseq.tasks.translation | example hypothesis: Filters based on whether there is an attachment for the message.
2021-02-01 00:46:40 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:46:40 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:46:40 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:46:41 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:46:41 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:46:42 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked, then define the comparison.
2021-02-01 00:46:42 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:46:42 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your junk mail list. Any time you mark messages as junk mail, the sender is removed from your junk mail list.
2021-02-01 00:46:42 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:46:43 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:46:43 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:46:45 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are basically memos scheduled for a particular day and appear in the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Shared Memos will be entered into your calendar on the specified date. They will not appear in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:46:45 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:46:46 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution evaluates it for the first time only, even if the message defines the header differently the second time. For example, if a message defines Resent-From: as engineering @ example.com and then restates it as marketing @ example.com, Evolution filters as if the second value did not exist. To filter messages that use the same headers more than once, use a regular expression.
2021-02-01 00:46:46 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:46:46 | INFO | valid | epoch 006 | valid on 'valid' subset | loss 2.574 | nll_loss 0.67 | ppl 1.59 | bleu 70.17 | wps 627.1 | wpb 525.5 | bsz 18.9 | num_updates 2492 | best_loss 2.574
2021-02-01 00:46:46 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:47:08 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 6 @ 2492 updates, score 2.574) (writing took 21.438300038687885 seconds)
2021-02-01 00:47:08 | INFO | fairseq_cli.train | end of epoch 6 (average epoch stats below)
2021-02-01 00:47:08 | INFO | train | epoch 006 | loss 2.634 | nll_loss 0.792 | ppl 1.73 | wps 4051.9 | ups 6.21 | wpb 652.3 | bsz 24 | num_updates 2492 | lr 0.000109025 | gnorm 3.22 | loss_scale 8 | train_wall 38 | wall 406
2021-02-01 00:47:08 | INFO | fairseq_cli.train | begin training epoch 6
2021-02-01 00:47:08 | INFO | train_inner | epoch 007:      8 / 416 loss=2.688, nll_loss=0.853, ppl=1.81, wps=1710.5, ups=2.65, wpb=644.8, bsz=23.6, num_updates=2500, lr=0.000109375, gnorm=3.179, loss_scale=8, train_wall=9, wall=407
2021-02-01 00:47:18 | INFO | train_inner | epoch 007:    108 / 416 loss=2.523, nll_loss=0.666, ppl=1.59, wps=7244.8, ups=10.79, wpb=671.2, bsz=24.9, num_updates=2600, lr=0.00011375, gnorm=2.676, loss_scale=8, train_wall=9, wall=416
2021-02-01 00:47:27 | INFO | train_inner | epoch 007:    208 / 416 loss=2.482, nll_loss=0.621, ppl=1.54, wps=6946.8, ups=10.63, wpb=653.5, bsz=25.6, num_updates=2700, lr=0.000118125, gnorm=2.775, loss_scale=8, train_wall=9, wall=425
2021-02-01 00:47:36 | INFO | train_inner | epoch 007:    308 / 416 loss=2.559, nll_loss=0.707, ppl=1.63, wps=6855.8, ups=10.71, wpb=640.4, bsz=21.5, num_updates=2800, lr=0.0001225, gnorm=3.276, loss_scale=8, train_wall=9, wall=435
2021-02-01 00:47:46 | INFO | train_inner | epoch 007:    408 / 416 loss=2.639, nll_loss=0.799, ppl=1.74, wps=7020.7, ups=10.85, wpb=647.1, bsz=23.2, num_updates=2900, lr=0.000126875, gnorm=3.368, loss_scale=8, train_wall=9, wall=444
2021-02-01 00:47:46 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:47:47 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:47:47 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:47:48 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:47:48 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:47:48 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk list on Novell Groupwise.
2021-02-01 00:47:48 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:47:49 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you must first select which part of the message will be checked and then define the comparison.
2021-02-01 00:47:49 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:47:50 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk senders. Any time you mark messages as junk mail, the sender is removed from your list of junk senders.
2021-02-01 00:47:50 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:47:51 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:47:51 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:47:52 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a special day and appear in the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your calendars on the date you specify. They are not placed in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:47:52 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:47:53 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution pays attention only to the first occurrence, even if the message defines the header differently the second time. For example, when a message declares Resent-From: as engineering @ example.com and then restates it as marketing @ example.com, Evolution filters as if the second did not exist. To filter messages that use the same headers multiple times, use regular expressions.
2021-02-01 00:47:53 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:47:53 | INFO | valid | epoch 007 | valid on 'valid' subset | loss 2.556 | nll_loss 0.652 | ppl 1.57 | bleu 71.49 | wps 609.2 | wpb 525.5 | bsz 18.9 | num_updates 2908 | best_loss 2.556
2021-02-01 00:47:53 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:48:17 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 7 @ 2908 updates, score 2.556) (writing took 23.025128616951406 seconds)
2021-02-01 00:48:17 | INFO | fairseq_cli.train | end of epoch 7 (average epoch stats below)
2021-02-01 00:48:17 | INFO | train | epoch 007 | loss 2.542 | nll_loss 0.688 | ppl 1.61 | wps 3939.8 | ups 6.04 | wpb 652.3 | bsz 24 | num_updates 2908 | lr 0.000127225 | gnorm 2.998 | loss_scale 8 | train_wall 38 | wall 475
2021-02-01 00:48:17 | INFO | fairseq_cli.train | begin training epoch 7
2021-02-01 00:48:25 | INFO | train_inner | epoch 008:     92 / 416 loss=2.501, nll_loss=0.638, ppl=1.56, wps=1568.8, ups=2.54, wpb=617.6, bsz=23.5, num_updates=3000, lr=0.00013125, gnorm=2.888, loss_scale=8, train_wall=9, wall=483
2021-02-01 00:48:31 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 4.0
2021-02-01 00:48:34 | INFO | train_inner | epoch 008:    193 / 416 loss=2.398, nll_loss=0.528, ppl=1.44, wps=6753.2, ups=10.84, wpb=623, bsz=21.5, num_updates=3100, lr=0.000135625, gnorm=2.75, loss_scale=7, train_wall=9, wall=493
2021-02-01 00:48:44 | INFO | train_inner | epoch 008:    293 / 416 loss=2.64, nll_loss=0.801, ppl=1.74, wps=7489.6, ups=10.72, wpb=698.4, bsz=26.1, num_updates=3200, lr=0.00014, gnorm=3.366, loss_scale=4, train_wall=9, wall=502
2021-02-01 00:48:53 | INFO | train_inner | epoch 008:    393 / 416 loss=2.425, nll_loss=0.556, ppl=1.47, wps=7055.3, ups=10.77, wpb=654.9, bsz=25.4, num_updates=3300, lr=0.000144375, gnorm=3.155, loss_scale=4, train_wall=9, wall=511
2021-02-01 00:48:55 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:48:56 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the message.
2021-02-01 00:48:56 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:48:56 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:48:56 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:48:57 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your list of spam senders in Novell Groupwise.
2021-02-01 00:48:57 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:48:57 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:48:57 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:48:58 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk mail, the sender is added to your list of junk messages. Each time you mark messages as junk mail, the sender is removed from your list of junk messages.
2021-02-01 00:48:58 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:48:59 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:48:59 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:49:01 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your calendar on the date you specify. They are not placed in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:49:01 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:49:02 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter messages that use the same headers multiple times, use regular expressions.
2021-02-01 00:49:02 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:49:02 | INFO | valid | epoch 008 | valid on 'valid' subset | loss 2.517 | nll_loss 0.593 | ppl 1.51 | bleu 75.92 | wps 582.8 | wpb 525.5 | bsz 18.9 | num_updates 3323 | best_loss 2.517
2021-02-01 00:49:02 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:49:21 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 8 @ 3323 updates, score 2.517) (writing took 18.74733880162239 seconds)
2021-02-01 00:49:21 | INFO | fairseq_cli.train | end of epoch 8 (average epoch stats below)
2021-02-01 00:49:21 | INFO | train | epoch 008 | loss 2.494 | nll_loss 0.634 | ppl 1.55 | wps 4188.3 | ups 6.42 | wpb 652.2 | bsz 24.1 | num_updates 3323 | lr 0.000145381 | gnorm 3.045 | loss_scale 6 | train_wall 38 | wall 539
2021-02-01 00:49:21 | INFO | fairseq_cli.train | begin training epoch 8
2021-02-01 00:49:28 | INFO | train_inner | epoch 009:     77 / 416 loss=2.44, nll_loss=0.574, ppl=1.49, wps=1842.6, ups=2.82, wpb=654, bsz=25.6, num_updates=3400, lr=0.00014875, gnorm=3.106, loss_scale=4, train_wall=9, wall=547
2021-02-01 00:49:38 | INFO | train_inner | epoch 009:    177 / 416 loss=2.555, nll_loss=0.703, ppl=1.63, wps=6952.2, ups=10.64, wpb=653.7, bsz=21.9, num_updates=3500, lr=0.000153125, gnorm=3.446, loss_scale=4, train_wall=9, wall=556
2021-02-01 00:49:47 | INFO | train_inner | epoch 009:    277 / 416 loss=2.445, nll_loss=0.58, ppl=1.49, wps=7124.7, ups=10.73, wpb=664.1, bsz=24.2, num_updates=3600, lr=0.0001575, gnorm=3.277, loss_scale=4, train_wall=9, wall=565
2021-02-01 00:49:56 | INFO | train_inner | epoch 009:    377 / 416 loss=2.462, nll_loss=0.602, ppl=1.52, wps=6944.6, ups=10.91, wpb=636.8, bsz=24.2, num_updates=3700, lr=0.000161875, gnorm=2.739, loss_scale=4, train_wall=9, wall=575
2021-02-01 00:50:00 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:50:00 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the message.
2021-02-01 00:50:00 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:50:01 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:50:01 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:50:02 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk list on Novell GroupWise.
2021-02-01 00:50:02 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:50:02 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:50:02 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:50:03 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk, the sender will be added to your junk list. Any time you mark messages as junk, the sender will be removed from your junk list.
2021-02-01 00:50:03 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:50:04 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:50:04 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:50:06 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, etc. Posted shared memos are placed in your calendar on the date you specify. They are not placed in your Mailbox or any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:50:06 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:50:07 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second declaration did not occur. Use regular expressions to filter messages that use the same headers more than once.
2021-02-01 00:50:07 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:50:07 | INFO | valid | epoch 009 | valid on 'valid' subset | loss 2.51 | nll_loss 0.594 | ppl 1.51 | bleu 75.59 | wps 594.2 | wpb 525.5 | bsz 18.9 | num_updates 3739 | best_loss 2.51
2021-02-01 00:50:07 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:50:28 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 9 @ 3739 updates, score 2.51) (writing took 21.145394891500473 seconds)
2021-02-01 00:50:28 | INFO | fairseq_cli.train | end of epoch 9 (average epoch stats below)
2021-02-01 00:50:28 | INFO | train | epoch 009 | loss 2.477 | nll_loss 0.616 | ppl 1.53 | wps 4038.4 | ups 6.19 | wpb 652.3 | bsz 24 | num_updates 3739 | lr 0.000163581 | gnorm 3.138 | loss_scale 4 | train_wall 38 | wall 607
2021-02-01 00:50:28 | INFO | fairseq_cli.train | begin training epoch 9
2021-02-01 00:50:34 | INFO | train_inner | epoch 010:     61 / 416 loss=2.416, nll_loss=0.544, ppl=1.46, wps=1721.6, ups=2.64, wpb=651.1, bsz=23, num_updates=3800, lr=0.00016625, gnorm=2.717, loss_scale=4, train_wall=9, wall=612
2021-02-01 00:50:43 | INFO | train_inner | epoch 010:    161 / 416 loss=2.443, nll_loss=0.576, ppl=1.49, wps=7137.9, ups=10.68, wpb=668.5, bsz=25.2, num_updates=3900, lr=0.000170625, gnorm=3.195, loss_scale=4, train_wall=9, wall=622
2021-02-01 00:50:53 | INFO | train_inner | epoch 010:    261 / 416 loss=2.488, nll_loss=0.627, ppl=1.54, wps=7081.7, ups=10.7, wpb=661.8, bsz=24.2, num_updates=4000, lr=0.000175, gnorm=3.556, loss_scale=4, train_wall=9, wall=631
2021-02-01 00:51:02 | INFO | train_inner | epoch 010:    361 / 416 loss=2.461, nll_loss=0.599, ppl=1.51, wps=7142.1, ups=10.8, wpb=661.1, bsz=24.8, num_updates=4100, lr=0.000172853, gnorm=2.951, loss_scale=4, train_wall=9, wall=640
2021-02-01 00:51:07 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:51:08 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there UNKNOWNTOKENINHYP s an attachment.
2021-02-01 00:51:08 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:51:08 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:51:08 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:51:09 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk email list on Novell GroupWise.
2021-02-01 00:51:09 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:51:10 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:51:10 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:51:10 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk, the sender is added to your list of junk senders. Each time you mark messages as junk, the sender is removed from your list of junk senders.
2021-02-01 00:51:10 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:51:11 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:51:11 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:51:13 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages messages that are scheduled for a particular date and appear on the calendar for that date. You can use shared memos to show vacations, vacations, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:51:13 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:51:14 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter messages that use the same headers multiple times, use a regular expression.
2021-02-01 00:51:14 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:51:14 | INFO | valid | epoch 010 | valid on 'valid' subset | loss 2.493 | nll_loss 0.565 | ppl 1.48 | bleu 77.7 | wps 611.4 | wpb 525.5 | bsz 18.9 | num_updates 4155 | best_loss 2.493
2021-02-01 00:51:14 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:51:36 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 10 @ 4155 updates, score 2.493) (writing took 21.51320073660463 seconds)
2021-02-01 00:51:36 | INFO | fairseq_cli.train | end of epoch 10 (average epoch stats below)
2021-02-01 00:51:36 | INFO | train | epoch 010 | loss 2.446 | nll_loss 0.58 | ppl 1.49 | wps 4023 | ups 6.17 | wpb 652.3 | bsz 24 | num_updates 4155 | lr 0.000171705 | gnorm 3.18 | loss_scale 4 | train_wall 38 | wall 674
2021-02-01 00:51:36 | INFO | fairseq_cli.train | begin training epoch 10
2021-02-01 00:51:40 | INFO | train_inner | epoch 011:     45 / 416 loss=2.47, nll_loss=0.606, ppl=1.52, wps=1640.2, ups=2.63, wpb=623.5, bsz=20.8, num_updates=4200, lr=0.000170783, gnorm=3.168, loss_scale=4, train_wall=9, wall=678
2021-02-01 00:51:49 | INFO | train_inner | epoch 011:    145 / 416 loss=2.354, nll_loss=0.48, ppl=1.39, wps=7008.8, ups=10.65, wpb=657.9, bsz=26.4, num_updates=4300, lr=0.000168785, gnorm=2.692, loss_scale=4, train_wall=9, wall=688
2021-02-01 00:52:00 | INFO | train_inner | epoch 011:    245 / 416 loss=2.529, nll_loss=0.671, ppl=1.59, wps=5720.9, ups=9.26, wpb=617.7, bsz=21.1, num_updates=4400, lr=0.000166856, gnorm=4.82, loss_scale=4, train_wall=11, wall=699
2021-02-01 00:52:10 | INFO | train_inner | epoch 011:    345 / 416 loss=2.388, nll_loss=0.519, ppl=1.43, wps=7079, ups=10.7, wpb=661.7, bsz=23.6, num_updates=4500, lr=0.000164992, gnorm=3.178, loss_scale=4, train_wall=9, wall=708
2021-02-01 00:52:16 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:52:17 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:52:17 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:52:17 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:52:17 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:52:18 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell GroupWise.
2021-02-01 00:52:18 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:52:19 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you must first select which of the following message parts will be checked and then define the comparison.
2021-02-01 00:52:19 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:52:19 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as not junk, the sender is added to your junk list. Whenever you mark a message as not junk, the sender is removed from your junk list.
2021-02-01 00:52:19 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:52:20 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:52:20 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:52:22 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear in the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, etc. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:52:22 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:52:23 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention to only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resources From: header as UNKNOWNTOKENINHYP engineering example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter messages that use headers multiple times.
2021-02-01 00:52:23 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:52:23 | INFO | valid | epoch 011 | valid on 'valid' subset | loss 2.444 | nll_loss 0.531 | ppl 1.44 | bleu 80.51 | wps 611.2 | wpb 525.5 | bsz 18.9 | num_updates 4571 | best_loss 2.444
2021-02-01 00:52:23 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:52:44 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 11 @ 4571 updates, score 2.444) (writing took 21.098235346376896 seconds)
2021-02-01 00:52:44 | INFO | fairseq_cli.train | end of epoch 11 (average epoch stats below)
2021-02-01 00:52:44 | INFO | train | epoch 011 | loss 2.412 | nll_loss 0.544 | ppl 1.46 | wps 3959.1 | ups 6.07 | wpb 652.3 | bsz 24 | num_updates 4571 | lr 0.000163705 | gnorm 3.268 | loss_scale 4 | train_wall 40 | wall 743
2021-02-01 00:52:44 | INFO | fairseq_cli.train | begin training epoch 11
2021-02-01 00:52:47 | INFO | train_inner | epoch 012:     29 / 416 loss=2.297, nll_loss=0.419, ppl=1.34, wps=1816.5, ups=2.67, wpb=680.3, bsz=27.8, num_updates=4600, lr=0.000163188, gnorm=2.278, loss_scale=4, train_wall=9, wall=745
2021-02-01 00:52:57 | INFO | train_inner | epoch 012:    129 / 416 loss=2.295, nll_loss=0.417, ppl=1.34, wps=6694.5, ups=10.6, wpb=631.4, bsz=23.1, num_updates=4700, lr=0.000161443, gnorm=2.675, loss_scale=4, train_wall=9, wall=755
2021-02-01 00:53:06 | INFO | train_inner | epoch 012:    229 / 416 loss=2.342, nll_loss=0.47, ppl=1.38, wps=6893.6, ups=10.72, wpb=643.3, bsz=23.8, num_updates=4800, lr=0.000159752, gnorm=2.648, loss_scale=4, train_wall=9, wall=764
2021-02-01 00:53:15 | INFO | train_inner | epoch 012:    329 / 416 loss=2.405, nll_loss=0.538, ppl=1.45, wps=6946.1, ups=10.67, wpb=650.8, bsz=25.1, num_updates=4900, lr=0.000158114, gnorm=2.685, loss_scale=4, train_wall=9, wall=774
2021-02-01 00:53:23 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:53:24 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:53:24 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:53:24 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:53:24 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:53:25 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your Junk Mail List in Novell GroupWise.
2021-02-01 00:53:25 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:53:26 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:53:26 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:53:27 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark your message as junk, the sender is added to your list of Junk Mail senders. Each time you mark your message as junk, the sender is removed from your list of Junk Sender.
2021-02-01 00:53:27 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:53:28 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:53:28 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:53:29 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Mailbox or in another user UNKNOWNTOKENINHYP s Mailbox on the date you specify.
2021-02-01 00:53:29 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:53:30 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter messages that use headers multiple times, use a regular expression.
2021-02-01 00:53:30 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:53:30 | INFO | valid | epoch 012 | valid on 'valid' subset | loss 2.446 | nll_loss 0.514 | ppl 1.43 | bleu 83.86 | wps 615.6 | wpb 525.5 | bsz 18.9 | num_updates 4987 | best_loss 2.444
2021-02-01 00:53:30 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:53:42 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 12 @ 4987 updates, score 2.446) (writing took 11.546464879997075 seconds)
2021-02-01 00:53:42 | INFO | fairseq_cli.train | end of epoch 12 (average epoch stats below)
2021-02-01 00:53:42 | INFO | train | epoch 012 | loss 2.362 | nll_loss 0.491 | ppl 1.41 | wps 4717.1 | ups 7.23 | wpb 652.3 | bsz 24 | num_updates 4987 | lr 0.000156729 | gnorm 3.126 | loss_scale 4 | train_wall 38 | wall 800
2021-02-01 00:53:42 | INFO | fairseq_cli.train | begin training epoch 12
2021-02-01 00:53:43 | INFO | train_inner | epoch 013:     13 / 416 loss=2.432, nll_loss=0.571, ppl=1.49, wps=2445.6, ups=3.58, wpb=682.8, bsz=23.2, num_updates=5000, lr=0.000156525, gnorm=5.004, loss_scale=4, train_wall=9, wall=801
2021-02-01 00:53:53 | INFO | train_inner | epoch 013:    113 / 416 loss=2.246, nll_loss=0.364, ppl=1.29, wps=7039.2, ups=10.61, wpb=663.7, bsz=25.4, num_updates=5100, lr=0.000154983, gnorm=2.097, loss_scale=4, train_wall=9, wall=811
2021-02-01 00:54:02 | INFO | train_inner | epoch 013:    213 / 416 loss=2.339, nll_loss=0.469, ppl=1.38, wps=6968.2, ups=10.73, wpb=649.5, bsz=26.5, num_updates=5200, lr=0.000153485, gnorm=3.068, loss_scale=4, train_wall=9, wall=820
2021-02-01 00:54:11 | INFO | train_inner | epoch 013:    313 / 416 loss=2.36, nll_loss=0.488, ppl=1.4, wps=6731, ups=10.63, wpb=633.2, bsz=20.1, num_updates=5300, lr=0.00015203, gnorm=3.592, loss_scale=4, train_wall=9, wall=830
2021-02-01 00:54:21 | INFO | train_inner | epoch 013:    413 / 416 loss=2.276, nll_loss=0.397, ppl=1.32, wps=7045.3, ups=10.7, wpb=658.2, bsz=24.8, num_updates=5400, lr=0.000150616, gnorm=2.449, loss_scale=4, train_wall=9, wall=839
2021-02-01 00:54:21 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:54:21 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:54:21 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:54:22 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:54:22 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:54:23 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of unwanted senders in Novell GroupWise.
2021-02-01 00:54:23 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:54:23 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:54:23 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:54:24 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk, the sender is added to your list of junk messages. Whenever you mark the message as junk, the sender is removed from your list of junk senders.
2021-02-01 00:54:24 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:54:25 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:54:25 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:54:26 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Requested shared memos are placed in your Calendar on the date you specify. They are not placed in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:54:26 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:54:28 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:54:28 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:54:28 | INFO | valid | epoch 013 | valid on 'valid' subset | loss 2.438 | nll_loss 0.507 | ppl 1.42 | bleu 82.9 | wps 622.8 | wpb 525.5 | bsz 18.9 | num_updates 5403 | best_loss 2.438
2021-02-01 00:54:28 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:54:53 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 13 @ 5403 updates, score 2.438) (writing took 24.76278655603528 seconds)
2021-02-01 00:54:53 | INFO | fairseq_cli.train | end of epoch 13 (average epoch stats below)
2021-02-01 00:54:53 | INFO | train | epoch 013 | loss 2.308 | nll_loss 0.432 | ppl 1.35 | wps 3835.3 | ups 5.88 | wpb 652.3 | bsz 24 | num_updates 5403 | lr 0.000150574 | gnorm 2.846 | loss_scale 4 | train_wall 38 | wall 871
2021-02-01 00:54:53 | INFO | fairseq_cli.train | begin training epoch 13
2021-02-01 00:55:02 | INFO | train_inner | epoch 014:     97 / 416 loss=2.284, nll_loss=0.408, ppl=1.33, wps=1653.8, ups=2.43, wpb=679.6, bsz=24.9, num_updates=5500, lr=0.000149241, gnorm=2.27, loss_scale=4, train_wall=9, wall=880
2021-02-01 00:55:11 | INFO | train_inner | epoch 014:    197 / 416 loss=2.285, nll_loss=0.408, ppl=1.33, wps=6806.9, ups=10.7, wpb=635.9, bsz=25.6, num_updates=5600, lr=0.000147902, gnorm=2.458, loss_scale=4, train_wall=9, wall=889
2021-02-01 00:55:20 | INFO | train_inner | epoch 014:    297 / 416 loss=2.245, nll_loss=0.366, ppl=1.29, wps=7060.4, ups=10.72, wpb=658.7, bsz=22.8, num_updates=5700, lr=0.000146599, gnorm=2.334, loss_scale=4, train_wall=9, wall=899
2021-02-01 00:55:30 | INFO | train_inner | epoch 014:    397 / 416 loss=2.272, nll_loss=0.394, ppl=1.31, wps=6762.2, ups=10.67, wpb=633.5, bsz=22.9, num_updates=5800, lr=0.00014533, gnorm=2.559, loss_scale=4, train_wall=9, wall=908
2021-02-01 00:55:32 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:55:32 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:55:32 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:55:33 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:55:33 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:55:33 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk mail list on Novell Groupwise.
2021-02-01 00:55:33 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:55:34 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:55:34 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:55:35 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of junk messages. Any time you mark it as not junk mail, the sender is removed from your junk mail list.
2021-02-01 00:55:35 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:55:36 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:55:36 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:55:37 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages messages messages messages messages messages messages that appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:55:37 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:55:39 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares Resent-From: as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:55:39 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:55:39 | INFO | valid | epoch 014 | valid on 'valid' subset | loss 2.414 | nll_loss 0.503 | ppl 1.42 | bleu 84.15 | wps 617.5 | wpb 525.5 | bsz 18.9 | num_updates 5819 | best_loss 2.414
2021-02-01 00:55:39 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:56:05 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 14 @ 5819 updates, score 2.414) (writing took 26.871423677541316 seconds)
2021-02-01 00:56:05 | INFO | fairseq_cli.train | end of epoch 14 (average epoch stats below)
2021-02-01 00:56:05 | INFO | train | epoch 014 | loss 2.272 | nll_loss 0.395 | ppl 1.32 | wps 3726.9 | ups 5.71 | wpb 652.3 | bsz 24 | num_updates 5819 | lr 0.000145092 | gnorm 2.423 | loss_scale 4 | train_wall 38 | wall 944
2021-02-01 00:56:05 | INFO | fairseq_cli.train | begin training epoch 14
2021-02-01 00:56:13 | INFO | train_inner | epoch 015:     81 / 416 loss=2.236, nll_loss=0.358, ppl=1.28, wps=1471.4, ups=2.32, wpb=635.5, bsz=22.1, num_updates=5900, lr=0.000144093, gnorm=2.248, loss_scale=4, train_wall=9, wall=951
2021-02-01 00:56:22 | INFO | train_inner | epoch 015:    181 / 416 loss=2.255, nll_loss=0.379, ppl=1.3, wps=6949.5, ups=10.84, wpb=641.1, bsz=24.5, num_updates=6000, lr=0.000142887, gnorm=1.917, loss_scale=4, train_wall=9, wall=960
2021-02-01 00:56:32 | INFO | train_inner | epoch 015:    281 / 416 loss=2.263, nll_loss=0.384, ppl=1.31, wps=6840.3, ups=10.48, wpb=652.5, bsz=22.7, num_updates=6100, lr=0.000141711, gnorm=2.144, loss_scale=4, train_wall=9, wall=970
2021-02-01 00:56:41 | INFO | train_inner | epoch 015:    381 / 416 loss=2.232, nll_loss=0.353, ppl=1.28, wps=6988.1, ups=10.46, wpb=668.3, bsz=26.1, num_updates=6200, lr=0.000140563, gnorm=2.008, loss_scale=4, train_wall=9, wall=980
2021-02-01 00:56:45 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:56:45 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment.
2021-02-01 00:56:45 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:56:46 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:56:46 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:56:46 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your list of junk mail senders in Novell Groupwise.
2021-02-01 00:56:46 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:56:47 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:56:47 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:56:48 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of Junk Mail senders. Whenever you mark messages as junk mail, the sender is removed from your list of Junk Mail senders.
2021-02-01 00:56:48 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:56:49 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:56:49 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:56:51 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:56:51 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:56:52 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use a regular expression, use a filter.
2021-02-01 00:56:52 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:56:52 | INFO | valid | epoch 015 | valid on 'valid' subset | loss 2.408 | nll_loss 0.508 | ppl 1.42 | bleu 85.54 | wps 560.4 | wpb 525.5 | bsz 18.9 | num_updates 6235 | best_loss 2.408
2021-02-01 00:56:52 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:57:13 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 15 @ 6235 updates, score 2.408) (writing took 20.62692609615624 seconds)
2021-02-01 00:57:13 | INFO | fairseq_cli.train | end of epoch 15 (average epoch stats below)
2021-02-01 00:57:13 | INFO | train | epoch 015 | loss 2.241 | nll_loss 0.363 | ppl 1.29 | wps 4021 | ups 6.16 | wpb 652.3 | bsz 24 | num_updates 6235 | lr 0.000140168 | gnorm 2.181 | loss_scale 4 | train_wall 38 | wall 1011
2021-02-01 00:57:13 | INFO | fairseq_cli.train | begin training epoch 15
2021-02-01 00:57:19 | INFO | train_inner | epoch 016:     65 / 416 loss=2.197, nll_loss=0.316, ppl=1.24, wps=1770.4, ups=2.64, wpb=670.3, bsz=24.4, num_updates=6300, lr=0.000139443, gnorm=2.617, loss_scale=4, train_wall=9, wall=1017
2021-02-01 00:57:29 | INFO | train_inner | epoch 016:    165 / 416 loss=2.213, nll_loss=0.334, ppl=1.26, wps=6642.6, ups=10.67, wpb=622.5, bsz=22.3, num_updates=6400, lr=0.00013835, gnorm=1.811, loss_scale=4, train_wall=9, wall=1027
2021-02-01 00:57:38 | INFO | train_inner | epoch 016:    265 / 416 loss=2.207, nll_loss=0.326, ppl=1.25, wps=6513.8, ups=10.64, wpb=612, bsz=23.8, num_updates=6500, lr=0.000137281, gnorm=1.823, loss_scale=4, train_wall=9, wall=1036
2021-02-01 00:57:47 | INFO | train_inner | epoch 016:    365 / 416 loss=2.228, nll_loss=0.352, ppl=1.28, wps=7453.3, ups=10.54, wpb=706.9, bsz=26.6, num_updates=6600, lr=0.000136237, gnorm=2.024, loss_scale=4, train_wall=9, wall=1046
2021-02-01 00:57:52 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:57:53 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:57:53 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:57:53 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:57:53 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:57:54 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:57:54 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:57:55 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which of the following parts of the message will be checked, and then define the comparison.
2021-02-01 00:57:55 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:57:55 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk mail. Any time you mark messages as not junk mail, the sender is removed from your list.
2021-02-01 00:57:55 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:57:56 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:57:56 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:57:58 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:57:58 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:57:59 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:57:59 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:57:59 | INFO | valid | epoch 016 | valid on 'valid' subset | loss 2.412 | nll_loss 0.479 | ppl 1.39 | bleu 85.37 | wps 615 | wpb 525.5 | bsz 18.9 | num_updates 6651 | best_loss 2.408
2021-02-01 00:57:59 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:58:06 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 16 @ 6651 updates, score 2.412) (writing took 6.647999392822385 seconds)
2021-02-01 00:58:06 | INFO | fairseq_cli.train | end of epoch 16 (average epoch stats below)
2021-02-01 00:58:06 | INFO | train | epoch 016 | loss 2.217 | nll_loss 0.338 | ppl 1.26 | wps 5123.1 | ups 7.85 | wpb 652.3 | bsz 24 | num_updates 6651 | lr 0.000135714 | gnorm 1.964 | loss_scale 4 | train_wall 39 | wall 1064
2021-02-01 00:58:06 | INFO | fairseq_cli.train | begin training epoch 16
2021-02-01 00:58:11 | INFO | train_inner | epoch 017:     49 / 416 loss=2.219, nll_loss=0.34, ppl=1.27, wps=2886.5, ups=4.31, wpb=669.5, bsz=24.9, num_updates=6700, lr=0.000135217, gnorm=2.327, loss_scale=4, train_wall=9, wall=1069
2021-02-01 00:58:20 | INFO | train_inner | epoch 017:    149 / 416 loss=2.201, nll_loss=0.321, ppl=1.25, wps=6971.5, ups=10.72, wpb=650.2, bsz=22.2, num_updates=6800, lr=0.000134219, gnorm=1.772, loss_scale=4, train_wall=9, wall=1078
2021-02-01 00:58:29 | INFO | train_inner | epoch 017:    249 / 416 loss=2.19, nll_loss=0.31, ppl=1.24, wps=6724.2, ups=10.61, wpb=634, bsz=22.6, num_updates=6900, lr=0.000133243, gnorm=1.893, loss_scale=4, train_wall=9, wall=1088
2021-02-01 00:58:39 | INFO | train_inner | epoch 017:    349 / 416 loss=2.196, nll_loss=0.316, ppl=1.24, wps=6882.8, ups=10.51, wpb=654.9, bsz=26.6, num_updates=7000, lr=0.000132288, gnorm=1.835, loss_scale=4, train_wall=9, wall=1097
2021-02-01 00:58:45 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:58:46 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:58:46 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:58:46 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:58:46 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:58:47 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk list on Novell GroupWise.
2021-02-01 00:58:47 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:58:48 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:58:48 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:58:48 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages for junk content, the sender is added to your list of junk messages. Any time you mark messages for junk, the sender is removed from your junk list.
2021-02-01 00:58:48 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:58:50 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:58:50 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:58:51 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:58:51 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:58:53 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:58:53 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:58:53 | INFO | valid | epoch 017 | valid on 'valid' subset | loss 2.396 | nll_loss 0.495 | ppl 1.41 | bleu 86.54 | wps 586 | wpb 525.5 | bsz 18.9 | num_updates 7067 | best_loss 2.396
2021-02-01 00:58:53 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:59:13 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 17 @ 7067 updates, score 2.396) (writing took 20.131343606859446 seconds)
2021-02-01 00:59:13 | INFO | fairseq_cli.train | end of epoch 17 (average epoch stats below)
2021-02-01 00:59:13 | INFO | train | epoch 017 | loss 2.192 | nll_loss 0.311 | ppl 1.24 | wps 4058.4 | ups 6.22 | wpb 652.3 | bsz 24 | num_updates 7067 | lr 0.000131659 | gnorm 1.906 | loss_scale 4 | train_wall 39 | wall 1131
2021-02-01 00:59:13 | INFO | fairseq_cli.train | begin training epoch 17
2021-02-01 00:59:16 | INFO | train_inner | epoch 018:     33 / 416 loss=2.18, nll_loss=0.298, ppl=1.23, wps=1744.8, ups=2.71, wpb=644.5, bsz=22.4, num_updates=7100, lr=0.000131353, gnorm=1.784, loss_scale=4, train_wall=9, wall=1134
2021-02-01 00:59:25 | INFO | train_inner | epoch 018:    133 / 416 loss=2.165, nll_loss=0.282, ppl=1.22, wps=6877.9, ups=10.59, wpb=649.5, bsz=25.4, num_updates=7200, lr=0.000130437, gnorm=1.618, loss_scale=4, train_wall=9, wall=1144
2021-02-01 00:59:35 | INFO | train_inner | epoch 018:    233 / 416 loss=2.171, nll_loss=0.291, ppl=1.22, wps=6962.9, ups=10.54, wpb=660.3, bsz=23.7, num_updates=7300, lr=0.000129541, gnorm=1.824, loss_scale=4, train_wall=9, wall=1153
2021-02-01 00:59:44 | INFO | train_inner | epoch 018:    333 / 416 loss=2.224, nll_loss=0.347, ppl=1.27, wps=6822.4, ups=10.59, wpb=644.1, bsz=23.2, num_updates=7400, lr=0.000128663, gnorm=1.847, loss_scale=4, train_wall=9, wall=1162
2021-02-01 00:59:52 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:59:53 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:59:53 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:59:53 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:59:53 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:59:54 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk mail list on Novell GroupWise.
2021-02-01 00:59:54 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:59:54 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:59:54 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:59:55 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk, the sender is added to your list of junk messages. Whenever you mark messages as junk, the sender is removed from your list of junk messages.
2021-02-01 00:59:55 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:59:56 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:59:56 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:59:58 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:59:58 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:59:59 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:59:59 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:59:59 | INFO | valid | epoch 018 | valid on 'valid' subset | loss 2.399 | nll_loss 0.501 | ppl 1.41 | bleu 86.24 | wps 593.3 | wpb 525.5 | bsz 18.9 | num_updates 7483 | best_loss 2.396
2021-02-01 00:59:59 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:00:07 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 18 @ 7483 updates, score 2.399) (writing took 7.692383854649961 seconds)
2021-02-01 01:00:07 | INFO | fairseq_cli.train | end of epoch 18 (average epoch stats below)
2021-02-01 01:00:07 | INFO | train | epoch 018 | loss 2.174 | nll_loss 0.293 | ppl 1.23 | wps 5003.6 | ups 7.67 | wpb 652.3 | bsz 24 | num_updates 7483 | lr 0.000127947 | gnorm 1.711 | loss_scale 4 | train_wall 39 | wall 1185
2021-02-01 01:00:07 | INFO | fairseq_cli.train | begin training epoch 18
2021-02-01 01:00:09 | INFO | train_inner | epoch 019:     17 / 416 loss=2.142, nll_loss=0.26, ppl=1.2, wps=2789.4, ups=4.08, wpb=684, bsz=25.2, num_updates=7500, lr=0.000127802, gnorm=1.632, loss_scale=4, train_wall=9, wall=1187
2021-02-01 01:00:18 | INFO | train_inner | epoch 019:    117 / 416 loss=2.165, nll_loss=0.283, ppl=1.22, wps=6703, ups=10.55, wpb=635.1, bsz=21.2, num_updates=7600, lr=0.000126958, gnorm=1.614, loss_scale=4, train_wall=9, wall=1196
2021-02-01 01:00:28 | INFO | train_inner | epoch 019:    217 / 416 loss=2.154, nll_loss=0.273, ppl=1.21, wps=7130.4, ups=10.61, wpb=672.2, bsz=26.8, num_updates=7700, lr=0.000126131, gnorm=1.843, loss_scale=4, train_wall=9, wall=1206
2021-02-01 01:00:37 | INFO | train_inner | epoch 019:    317 / 416 loss=2.149, nll_loss=0.27, ppl=1.21, wps=6840.1, ups=10.6, wpb=645.4, bsz=26.6, num_updates=7800, lr=0.00012532, gnorm=2.086, loss_scale=4, train_wall=9, wall=1215
2021-02-01 01:00:47 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:00:47 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:00:47 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:00:48 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:00:48 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:00:48 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:00:48 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:00:49 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:00:49 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:00:50 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of junk mail. Whenever you mark the message as junk, the sender is removed from your list.
2021-02-01 01:00:50 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:00:51 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:00:51 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:00:53 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:00:53 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:00:54 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:00:54 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:00:54 | INFO | valid | epoch 019 | valid on 'valid' subset | loss 2.393 | nll_loss 0.486 | ppl 1.4 | bleu 85.78 | wps 565.2 | wpb 525.5 | bsz 18.9 | num_updates 7899 | best_loss 2.393
2021-02-01 01:00:54 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:01:13 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 19 @ 7899 updates, score 2.393) (writing took 18.95805188268423 seconds)
2021-02-01 01:01:13 | INFO | fairseq_cli.train | end of epoch 19 (average epoch stats below)
2021-02-01 01:01:13 | INFO | train | epoch 019 | loss 2.161 | nll_loss 0.28 | ppl 1.21 | wps 4102.1 | ups 6.29 | wpb 652.3 | bsz 24 | num_updates 7899 | lr 0.000124532 | gnorm 1.867 | loss_scale 4 | train_wall 39 | wall 1251
2021-02-01 01:01:13 | INFO | fairseq_cli.train | begin training epoch 19
2021-02-01 01:01:13 | INFO | train_inner | epoch 020:      1 / 416 loss=2.169, nll_loss=0.286, ppl=1.22, wps=1785.6, ups=2.76, wpb=646.5, bsz=21.1, num_updates=7900, lr=0.000124524, gnorm=1.922, loss_scale=4, train_wall=9, wall=1252
2021-02-01 01:01:23 | INFO | train_inner | epoch 020:    101 / 416 loss=2.136, nll_loss=0.254, ppl=1.19, wps=6919.2, ups=10.58, wpb=654.3, bsz=25.8, num_updates=8000, lr=0.000123744, gnorm=1.501, loss_scale=4, train_wall=9, wall=1261
2021-02-01 01:01:32 | INFO | train_inner | epoch 020:    201 / 416 loss=2.151, nll_loss=0.269, ppl=1.2, wps=6867.4, ups=10.56, wpb=650.5, bsz=24.6, num_updates=8100, lr=0.000122977, gnorm=1.534, loss_scale=4, train_wall=9, wall=1270
2021-02-01 01:01:42 | INFO | train_inner | epoch 020:    301 / 416 loss=2.169, nll_loss=0.29, ppl=1.22, wps=6806.6, ups=10.61, wpb=641.6, bsz=21.5, num_updates=8200, lr=0.000122225, gnorm=1.671, loss_scale=4, train_wall=9, wall=1280
2021-02-01 01:01:51 | INFO | train_inner | epoch 020:    401 / 416 loss=2.135, nll_loss=0.256, ppl=1.19, wps=7124.3, ups=10.59, wpb=673, bsz=24.5, num_updates=8300, lr=0.000121487, gnorm=1.412, loss_scale=4, train_wall=9, wall=1289
2021-02-01 01:01:53 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:01:53 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:01:53 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:01:54 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:01:54 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:01:54 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk list in Novell Groupwise.
2021-02-01 01:01:54 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:01:55 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:01:55 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:01:56 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your junk list. Whenever you mark the messages as junk mail, the sender is removed from your junk list.
2021-02-01 01:01:56 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:01:57 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:01:57 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:01:58 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:01:58 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:02:00 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:02:00 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:02:00 | INFO | valid | epoch 020 | valid on 'valid' subset | loss 2.393 | nll_loss 0.497 | ppl 1.41 | bleu 86.46 | wps 600.1 | wpb 525.5 | bsz 18.9 | num_updates 8315 | best_loss 2.393
2021-02-01 01:02:00 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:02:20 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 20 @ 8315 updates, score 2.393) (writing took 20.07966490741819 seconds)
2021-02-01 01:02:20 | INFO | fairseq_cli.train | end of epoch 20 (average epoch stats below)
2021-02-01 01:02:20 | INFO | train | epoch 020 | loss 2.146 | nll_loss 0.265 | ppl 1.2 | wps 4069.7 | ups 6.24 | wpb 652.3 | bsz 24 | num_updates 8315 | lr 0.000121377 | gnorm 1.513 | loss_scale 4 | train_wall 39 | wall 1318
2021-02-01 01:02:20 | INFO | fairseq_cli.train | begin training epoch 20
2021-02-01 01:02:28 | INFO | train_inner | epoch 021:     85 / 416 loss=2.12, nll_loss=0.238, ppl=1.18, wps=1760.1, ups=2.72, wpb=648.1, bsz=24.4, num_updates=8400, lr=0.000120761, gnorm=1.316, loss_scale=4, train_wall=9, wall=1326
2021-02-01 01:02:37 | INFO | train_inner | epoch 021:    185 / 416 loss=2.125, nll_loss=0.246, ppl=1.19, wps=6856.3, ups=10.63, wpb=644.8, bsz=23.1, num_updates=8500, lr=0.000120049, gnorm=1.638, loss_scale=4, train_wall=9, wall=1336
2021-02-01 01:02:47 | INFO | train_inner | epoch 021:    285 / 416 loss=2.143, nll_loss=0.262, ppl=1.2, wps=6862.7, ups=10.6, wpb=647.5, bsz=24, num_updates=8600, lr=0.000119349, gnorm=1.469, loss_scale=4, train_wall=9, wall=1345
2021-02-01 01:02:56 | INFO | train_inner | epoch 021:    385 / 416 loss=2.138, nll_loss=0.258, ppl=1.2, wps=7020.2, ups=10.58, wpb=663.6, bsz=24.9, num_updates=8700, lr=0.000118661, gnorm=1.367, loss_scale=4, train_wall=9, wall=1354
2021-02-01 01:02:59 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:03:00 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:03:00 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:03:00 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:03:00 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:03:01 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:03:01 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:03:01 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:03:01 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:03:02 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your junk list. Any time you mark a message as junk mail, the user is removed from your junk list.
2021-02-01 01:03:02 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:03:03 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:03:03 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:03:05 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:03:05 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:03:06 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:03:06 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:03:06 | INFO | valid | epoch 021 | valid on 'valid' subset | loss 2.383 | nll_loss 0.483 | ppl 1.4 | bleu 87.09 | wps 598.8 | wpb 525.5 | bsz 18.9 | num_updates 8731 | best_loss 2.383
2021-02-01 01:03:06 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:03:25 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_best.pt (epoch 21 @ 8731 updates, score 2.383) (writing took 19.01758533064276 seconds)
2021-02-01 01:03:25 | INFO | fairseq_cli.train | end of epoch 21 (average epoch stats below)
2021-02-01 01:03:25 | INFO | train | epoch 021 | loss 2.134 | nll_loss 0.254 | ppl 1.19 | wps 4145.3 | ups 6.36 | wpb 652.3 | bsz 24 | num_updates 8731 | lr 0.00011845 | gnorm 1.999 | loss_scale 4 | train_wall 39 | wall 1384
2021-02-01 01:03:25 | INFO | fairseq_cli.train | begin training epoch 21
2021-02-01 01:03:32 | INFO | train_inner | epoch 022:     69 / 416 loss=2.13, nll_loss=0.249, ppl=1.19, wps=1862.9, ups=2.81, wpb=663.1, bsz=24.2, num_updates=8800, lr=0.000117985, gnorm=4.187, loss_scale=4, train_wall=9, wall=1390
2021-02-01 01:03:41 | INFO | train_inner | epoch 022:    169 / 416 loss=2.127, nll_loss=0.247, ppl=1.19, wps=7065.5, ups=10.66, wpb=663.1, bsz=26, num_updates=8900, lr=0.00011732, gnorm=1.196, loss_scale=4, train_wall=9, wall=1399
2021-02-01 01:03:51 | INFO | train_inner | epoch 022:    269 / 416 loss=2.112, nll_loss=0.232, ppl=1.17, wps=6722.7, ups=10.6, wpb=633.9, bsz=23.3, num_updates=9000, lr=0.000116667, gnorm=1.364, loss_scale=4, train_wall=9, wall=1409
2021-02-01 01:04:00 | INFO | train_inner | epoch 022:    369 / 416 loss=2.129, nll_loss=0.25, ppl=1.19, wps=6665.7, ups=10.64, wpb=626.7, bsz=20.4, num_updates=9100, lr=0.000116024, gnorm=1.587, loss_scale=4, train_wall=9, wall=1418
2021-02-01 01:04:05 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:04:05 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:04:05 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:04:06 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:04:06 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:04:06 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell GroupWise.
2021-02-01 01:04:06 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:04:07 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:04:07 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:04:08 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk mail senders. Whenever you mark messages as junk mail, the sender is removed from your list of junk mail senders.
2021-02-01 01:04:08 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:04:09 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:04:09 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:04:10 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:04:10 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:04:12 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:04:12 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:04:12 | INFO | valid | epoch 022 | valid on 'valid' subset | loss 2.401 | nll_loss 0.491 | ppl 1.41 | bleu 86.95 | wps 596.4 | wpb 525.5 | bsz 18.9 | num_updates 9147 | best_loss 2.383
2021-02-01 01:04:12 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:04:19 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 22 @ 9147 updates, score 2.401) (writing took 7.330505370162427 seconds)
2021-02-01 01:04:19 | INFO | fairseq_cli.train | end of epoch 22 (average epoch stats below)
2021-02-01 01:04:19 | INFO | train | epoch 022 | loss 2.126 | nll_loss 0.246 | ppl 1.19 | wps 5042.3 | ups 7.73 | wpb 652.3 | bsz 24 | num_updates 9147 | lr 0.000115725 | gnorm 1.564 | loss_scale 4 | train_wall 39 | wall 1437
2021-02-01 01:04:19 | INFO | fairseq_cli.train | begin training epoch 22
2021-02-01 01:04:24 | INFO | train_inner | epoch 023:     53 / 416 loss=2.132, nll_loss=0.251, ppl=1.19, wps=2743.1, ups=4.15, wpb=661.6, bsz=27.6, num_updates=9200, lr=0.000115392, gnorm=1.515, loss_scale=4, train_wall=9, wall=1442
2021-02-01 01:04:34 | INFO | train_inner | epoch 023:    153 / 416 loss=2.103, nll_loss=0.222, ppl=1.17, wps=7158.7, ups=10.61, wpb=674.5, bsz=25.5, num_updates=9300, lr=0.00011477, gnorm=1.254, loss_scale=4, train_wall=9, wall=1452
2021-02-01 01:04:43 | INFO | train_inner | epoch 023:    253 / 416 loss=2.11, nll_loss=0.231, ppl=1.17, wps=7013.8, ups=10.73, wpb=653.8, bsz=23.7, num_updates=9400, lr=0.000114157, gnorm=1.256, loss_scale=4, train_wall=9, wall=1461
2021-02-01 01:04:52 | INFO | train_inner | epoch 023:    353 / 416 loss=2.129, nll_loss=0.249, ppl=1.19, wps=6912.2, ups=10.61, wpb=651.3, bsz=24.1, num_updates=9500, lr=0.000113555, gnorm=1.424, loss_scale=4, train_wall=9, wall=1471
2021-02-01 01:04:58 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:04:59 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:04:59 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:04:59 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:04:59 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:05:00 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk list in Novell Groupwise.
2021-02-01 01:05:00 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:05:01 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:05:01 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:05:01 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your junk list. Any time you mark messages as junk mail, the sender is removed from your junk list.
2021-02-01 01:05:01 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:05:03 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:05:03 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:05:04 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:05:04 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:05:06 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:06 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:06 | INFO | valid | epoch 023 | valid on 'valid' subset | loss 2.386 | nll_loss 0.482 | ppl 1.4 | bleu 87.18 | wps 592.2 | wpb 525.5 | bsz 18.9 | num_updates 9563 | best_loss 2.383
2021-02-01 01:05:06 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:05:13 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 23 @ 9563 updates, score 2.386) (writing took 7.434367916546762 seconds)
2021-02-01 01:05:13 | INFO | fairseq_cli.train | end of epoch 23 (average epoch stats below)
2021-02-01 01:05:13 | INFO | train | epoch 023 | loss 2.118 | nll_loss 0.237 | ppl 1.18 | wps 5027.9 | ups 7.71 | wpb 652.3 | bsz 24 | num_updates 9563 | lr 0.00011318 | gnorm 1.333 | loss_scale 4 | train_wall 39 | wall 1491
2021-02-01 01:05:13 | INFO | fairseq_cli.train | begin training epoch 23
2021-02-01 01:05:17 | INFO | train_inner | epoch 024:     37 / 416 loss=2.141, nll_loss=0.263, ppl=1.2, wps=2588.2, ups=4.12, wpb=628, bsz=21, num_updates=9600, lr=0.000112962, gnorm=1.466, loss_scale=4, train_wall=9, wall=1495
2021-02-01 01:05:26 | INFO | train_inner | epoch 024:    137 / 416 loss=2.114, nll_loss=0.235, ppl=1.18, wps=6869.1, ups=10.59, wpb=648.8, bsz=22.4, num_updates=9700, lr=0.000112378, gnorm=1.174, loss_scale=4, train_wall=9, wall=1504
2021-02-01 01:05:35 | INFO | train_inner | epoch 024:    237 / 416 loss=2.114, nll_loss=0.234, ppl=1.18, wps=6736.5, ups=10.68, wpb=630.5, bsz=23.6, num_updates=9800, lr=0.000111803, gnorm=1.169, loss_scale=4, train_wall=9, wall=1514
2021-02-01 01:05:45 | INFO | train_inner | epoch 024:    337 / 416 loss=2.11, nll_loss=0.23, ppl=1.17, wps=7118.7, ups=10.74, wpb=662.8, bsz=24.2, num_updates=9900, lr=0.000111237, gnorm=1.235, loss_scale=4, train_wall=9, wall=1523
2021-02-01 01:05:52 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:05:53 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:05:53 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:05:53 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:05:53 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:05:54 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell GroupWise.
2021-02-01 01:05:54 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:05:55 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:05:55 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:05:55 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk messages. Any time you mark messages as junk mail, the sender is deleted from your list of junk messages.
2021-02-01 01:05:55 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:05:56 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:05:56 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:05:58 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:05:58 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:05:59 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:59 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:59 | INFO | valid | epoch 024 | valid on 'valid' subset | loss 2.401 | nll_loss 0.51 | ppl 1.42 | bleu 87.09 | wps 600.7 | wpb 525.5 | bsz 18.9 | num_updates 9979 | best_loss 2.383
2021-02-01 01:05:59 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:06:07 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 24 @ 9979 updates, score 2.401) (writing took 7.360630057752132 seconds)
2021-02-01 01:06:07 | INFO | fairseq_cli.train | end of epoch 24 (average epoch stats below)
2021-02-01 01:06:07 | INFO | train | epoch 024 | loss 2.111 | nll_loss 0.231 | ppl 1.17 | wps 5056.6 | ups 7.75 | wpb 652.3 | bsz 24 | num_updates 9979 | lr 0.000110796 | gnorm 1.253 | loss_scale 4 | train_wall 38 | wall 1545
2021-02-01 01:06:07 | INFO | fairseq_cli.train | begin training epoch 24
2021-02-01 01:06:09 | INFO | train_inner | epoch 025:     21 / 416 loss=2.091, nll_loss=0.211, ppl=1.16, wps=2863.9, ups=4.15, wpb=690.8, bsz=26.6, num_updates=10000, lr=0.00011068, gnorm=1.341, loss_scale=4, train_wall=9, wall=1547
2021-02-01 01:06:18 | INFO | train_inner | epoch 025:    121 / 416 loss=2.103, nll_loss=0.225, ppl=1.17, wps=6852.2, ups=10.6, wpb=646.7, bsz=23.7, num_updates=10100, lr=0.00011013, gnorm=1.193, loss_scale=4, train_wall=9, wall=1557
2021-02-01 01:06:28 | INFO | train_inner | epoch 025:    221 / 416 loss=2.106, nll_loss=0.226, ppl=1.17, wps=6739.6, ups=10.53, wpb=640.3, bsz=24.3, num_updates=10200, lr=0.000109589, gnorm=1.323, loss_scale=4, train_wall=9, wall=1566
2021-02-01 01:06:37 | INFO | train_inner | epoch 025:    321 / 416 loss=2.111, nll_loss=0.231, ppl=1.17, wps=6906.1, ups=10.65, wpb=648.7, bsz=24, num_updates=10300, lr=0.000109056, gnorm=1.156, loss_scale=4, train_wall=9, wall=1575
2021-02-01 01:06:46 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:06:47 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:06:47 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:06:47 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:06:47 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:06:48 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell GroupWise.
2021-02-01 01:06:48 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:06:49 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:06:49 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:06:49 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of junk messages. Any time you mark a message as junk mail, the sender is removed from your list.
2021-02-01 01:06:49 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:06:50 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:06:50 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:06:52 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:06:52 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:06:53 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:06:53 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:06:53 | INFO | valid | epoch 025 | valid on 'valid' subset | loss 2.39 | nll_loss 0.486 | ppl 1.4 | bleu 87.3 | wps 600 | wpb 525.5 | bsz 18.9 | num_updates 10395 | best_loss 2.383
2021-02-01 01:06:53 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:07:01 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 25 @ 10395 updates, score 2.39) (writing took 7.491583782248199 seconds)
2021-02-01 01:07:01 | INFO | fairseq_cli.train | end of epoch 25 (average epoch stats below)
2021-02-01 01:07:01 | INFO | train | epoch 025 | loss 2.107 | nll_loss 0.228 | ppl 1.17 | wps 5012.9 | ups 7.69 | wpb 652.3 | bsz 24 | num_updates 10395 | lr 0.000108556 | gnorm 1.223 | loss_scale 4 | train_wall 39 | wall 1599
2021-02-01 01:07:01 | INFO | fairseq_cli.train | begin training epoch 25
2021-02-01 01:07:01 | INFO | train_inner | epoch 026:      5 / 416 loss=2.114, nll_loss=0.236, ppl=1.18, wps=2734.5, ups=4.13, wpb=662.8, bsz=23.8, num_updates=10400, lr=0.00010853, gnorm=1.282, loss_scale=4, train_wall=9, wall=1600
2021-02-01 01:07:11 | INFO | train_inner | epoch 026:    105 / 416 loss=2.105, nll_loss=0.222, ppl=1.17, wps=6833.4, ups=10.57, wpb=646.6, bsz=21.6, num_updates=10500, lr=0.000108012, gnorm=1.235, loss_scale=4, train_wall=9, wall=1609
2021-02-01 01:07:20 | INFO | train_inner | epoch 026:    205 / 416 loss=2.094, nll_loss=0.218, ppl=1.16, wps=6998.6, ups=10.55, wpb=663.5, bsz=25.8, num_updates=10600, lr=0.000107502, gnorm=1.085, loss_scale=4, train_wall=9, wall=1619
2021-02-01 01:07:30 | INFO | train_inner | epoch 026:    305 / 416 loss=2.09, nll_loss=0.213, ppl=1.16, wps=7080.8, ups=10.7, wpb=661.6, bsz=27.6, num_updates=10700, lr=0.000106998, gnorm=1.118, loss_scale=4, train_wall=9, wall=1628
2021-02-01 01:07:39 | INFO | train_inner | epoch 026:    405 / 416 loss=2.11, nll_loss=0.231, ppl=1.17, wps=6783.8, ups=10.65, wpb=636.9, bsz=21.7, num_updates=10800, lr=0.000106502, gnorm=1.201, loss_scale=4, train_wall=9, wall=1637
2021-02-01 01:07:40 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:07:41 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:07:41 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:07:41 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:07:41 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:07:42 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail senders in Novell Groupwise.
2021-02-01 01:07:42 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:07:42 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:07:42 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:07:43 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of junk messages. Any time you mark a message as junk mail, the sender is removed from your list.
2021-02-01 01:07:43 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:07:44 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:07:44 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:07:46 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Calendar or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:07:46 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:07:47 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:07:47 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:07:47 | INFO | valid | epoch 026 | valid on 'valid' subset | loss 2.401 | nll_loss 0.507 | ppl 1.42 | bleu 88 | wps 599.3 | wpb 525.5 | bsz 18.9 | num_updates 10811 | best_loss 2.383
2021-02-01 01:07:47 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:07:53 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 26 @ 10811 updates, score 2.401) (writing took 6.130301217548549 seconds)
2021-02-01 01:07:53 | INFO | fairseq_cli.train | end of epoch 26 (average epoch stats below)
2021-02-01 01:07:53 | INFO | train | epoch 026 | loss 2.101 | nll_loss 0.221 | ppl 1.17 | wps 5162 | ups 7.91 | wpb 652.3 | bsz 24 | num_updates 10811 | lr 0.000106447 | gnorm 1.16 | loss_scale 4 | train_wall 39 | wall 1652
2021-02-01 01:07:53 | INFO | fairseq_cli.train | begin training epoch 26
2021-02-01 01:08:02 | INFO | train_inner | epoch 027:     89 / 416 loss=2.1, nll_loss=0.222, ppl=1.17, wps=2823.2, ups=4.38, wpb=645.2, bsz=23.4, num_updates=10900, lr=0.000106012, gnorm=1.342, loss_scale=4, train_wall=9, wall=1660
2021-02-01 01:08:11 | INFO | train_inner | epoch 027:    189 / 416 loss=2.098, nll_loss=0.219, ppl=1.16, wps=6994.8, ups=10.65, wpb=656.9, bsz=23.8, num_updates=11000, lr=0.000105529, gnorm=1.21, loss_scale=4, train_wall=9, wall=1670
2021-02-01 01:08:21 | INFO | train_inner | epoch 027:    289 / 416 loss=2.097, nll_loss=0.218, ppl=1.16, wps=6764.3, ups=10.75, wpb=629.4, bsz=22.7, num_updates=11100, lr=0.000105053, gnorm=1.32, loss_scale=4, train_wall=9, wall=1679
2021-02-01 01:08:30 | INFO | train_inner | epoch 027:    389 / 416 loss=2.101, nll_loss=0.226, ppl=1.17, wps=7159.9, ups=10.64, wpb=673.1, bsz=25.2, num_updates=11200, lr=0.000104583, gnorm=1.002, loss_scale=4, train_wall=9, wall=1688
2021-02-01 01:08:33 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:08:33 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:08:33 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:08:35 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:08:35 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:08:36 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your junk list. Whenever you mark the messages as junk mail, the sender is removed from your junk list.
2021-02-01 01:08:36 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:08:37 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:08:37 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:08:38 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:08:38 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:08:40 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if the message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:08:40 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:08:40 | INFO | valid | epoch 027 | valid on 'valid' subset | loss 2.385 | nll_loss 0.491 | ppl 1.41 | bleu 88.2 | wps 605.5 | wpb 525.5 | bsz 18.9 | num_updates 11227 | best_loss 2.383
2021-02-01 01:08:40 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:08:48 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 27 @ 11227 updates, score 2.385) (writing took 8.757801533676684 seconds)
2021-02-01 01:08:48 | INFO | fairseq_cli.train | end of epoch 27 (average epoch stats below)
2021-02-01 01:08:48 | INFO | train | epoch 027 | loss 2.097 | nll_loss 0.219 | ppl 1.16 | wps 4933.3 | ups 7.56 | wpb 652.3 | bsz 24 | num_updates 11227 | lr 0.000104457 | gnorm 1.214 | loss_scale 4 | train_wall 38 | wall 1707
2021-02-01 01:08:48 | INFO | fairseq_cli.train | begin training epoch 27
2021-02-01 01:08:55 | INFO | train_inner | epoch 028:     73 / 416 loss=2.088, nll_loss=0.207, ppl=1.15, wps=2417.5, ups=3.96, wpb=611.1, bsz=22.4, num_updates=11300, lr=0.000104119, gnorm=1.105, loss_scale=4, train_wall=9, wall=1714
2021-02-01 01:09:05 | INFO | train_inner | epoch 028:    173 / 416 loss=2.108, nll_loss=0.232, ppl=1.17, wps=6673.8, ups=10.61, wpb=629.3, bsz=22.1, num_updates=11400, lr=0.000103661, gnorm=1.236, loss_scale=4, train_wall=9, wall=1723
2021-02-01 01:09:14 | INFO | train_inner | epoch 028:    273 / 416 loss=2.08, nll_loss=0.204, ppl=1.15, wps=7268.9, ups=10.61, wpb=684.9, bsz=27.6, num_updates=11500, lr=0.000103209, gnorm=1.275, loss_scale=4, train_wall=9, wall=1732
2021-02-01 01:09:24 | INFO | train_inner | epoch 028:    373 / 416 loss=2.087, nll_loss=0.21, ppl=1.16, wps=7319.4, ups=10.6, wpb=690.6, bsz=26.2, num_updates=11600, lr=0.000102764, gnorm=1.118, loss_scale=4, train_wall=9, wall=1742
2021-02-01 01:09:28 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:09:28 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:09:28 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:09:29 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:09:29 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:09:29 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:09:29 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:09:30 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:09:30 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:09:31 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk, the sender is added to your junk mail list. Whenever you mark the message as junk mail, the sender is removed from your junk mail list.
2021-02-01 01:09:31 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:09:32 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:09:32 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:09:33 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:09:33 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:09:35 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:09:35 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:09:35 | INFO | valid | epoch 028 | valid on 'valid' subset | loss 2.386 | nll_loss 0.499 | ppl 1.41 | bleu 88.19 | wps 594 | wpb 525.5 | bsz 18.9 | num_updates 11643 | best_loss 2.383
2021-02-01 01:09:35 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:09:42 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 28 @ 11643 updates, score 2.386) (writing took 7.11057944316417 seconds)
2021-02-01 01:09:42 | INFO | fairseq_cli.train | end of epoch 28 (average epoch stats below)
2021-02-01 01:09:42 | INFO | train | epoch 028 | loss 2.092 | nll_loss 0.215 | ppl 1.16 | wps 5067.3 | ups 7.77 | wpb 652.3 | bsz 24 | num_updates 11643 | lr 0.000102574 | gnorm 1.182 | loss_scale 4 | train_wall 38 | wall 1760
2021-02-01 01:09:42 | INFO | fairseq_cli.train | begin training epoch 28
2021-02-01 01:09:47 | INFO | train_inner | epoch 029:     57 / 416 loss=2.104, nll_loss=0.228, ppl=1.17, wps=2725.6, ups=4.2, wpb=649.2, bsz=20.8, num_updates=11700, lr=0.000102323, gnorm=1.314, loss_scale=4, train_wall=9, wall=1766
2021-02-01 01:09:57 | INFO | train_inner | epoch 029:    157 / 416 loss=2.081, nll_loss=0.205, ppl=1.15, wps=7212.1, ups=10.65, wpb=677, bsz=25, num_updates=11800, lr=0.000101889, gnorm=0.872, loss_scale=4, train_wall=9, wall=1775
2021-02-01 01:10:06 | INFO | train_inner | epoch 029:    257 / 416 loss=2.094, nll_loss=0.218, ppl=1.16, wps=6684.7, ups=10.52, wpb=635.1, bsz=23.8, num_updates=11900, lr=0.00010146, gnorm=1.168, loss_scale=4, train_wall=9, wall=1785
2021-02-01 01:10:16 | INFO | train_inner | epoch 029:    357 / 416 loss=2.088, nll_loss=0.211, ppl=1.16, wps=6813.7, ups=10.69, wpb=637.3, bsz=23.7, num_updates=12000, lr=0.000101036, gnorm=1.009, loss_scale=4, train_wall=9, wall=1794
2021-02-01 01:10:21 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:10:22 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:10:22 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:10:22 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:10:22 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:10:23 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell GroupWise.
2021-02-01 01:10:23 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:10:24 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:10:24 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:10:24 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk, the sender is added to your list. Any time you mark messages as junk, the sender is removed from your list.
2021-02-01 01:10:24 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:10:25 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:10:25 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:10:27 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:10:27 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:10:28 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:10:28 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:10:28 | INFO | valid | epoch 029 | valid on 'valid' subset | loss 2.387 | nll_loss 0.491 | ppl 1.41 | bleu 87.71 | wps 614.1 | wpb 525.5 | bsz 18.9 | num_updates 12059 | best_loss 2.383
2021-02-01 01:10:28 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:10:35 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 29 @ 12059 updates, score 2.387) (writing took 6.374123499728739 seconds)
2021-02-01 01:10:35 | INFO | fairseq_cli.train | end of epoch 29 (average epoch stats below)
2021-02-01 01:10:35 | INFO | train | epoch 029 | loss 2.088 | nll_loss 0.212 | ppl 1.16 | wps 5152.5 | ups 7.9 | wpb 652.3 | bsz 24 | num_updates 12059 | lr 0.000100789 | gnorm 1.066 | loss_scale 4 | train_wall 39 | wall 1813
2021-02-01 01:10:35 | INFO | fairseq_cli.train | begin training epoch 29
2021-02-01 01:10:39 | INFO | train_inner | epoch 030:     41 / 416 loss=2.071, nll_loss=0.193, ppl=1.14, wps=2893.7, ups=4.34, wpb=666.8, bsz=25.3, num_updates=12100, lr=0.000100618, gnorm=1.108, loss_scale=4, train_wall=9, wall=1817
2021-02-01 01:10:48 | INFO | train_inner | epoch 030:    141 / 416 loss=2.086, nll_loss=0.209, ppl=1.16, wps=6778.4, ups=10.66, wpb=636, bsz=23.9, num_updates=12200, lr=0.000100205, gnorm=1.077, loss_scale=4, train_wall=9, wall=1826
2021-02-01 01:10:57 | INFO | train_inner | epoch 030:    241 / 416 loss=2.085, nll_loss=0.208, ppl=1.16, wps=7020, ups=10.68, wpb=657.1, bsz=24.9, num_updates=12300, lr=9.97965e-05, gnorm=1.305, loss_scale=4, train_wall=9, wall=1836
2021-02-01 01:11:07 | INFO | train_inner | epoch 030:    341 / 416 loss=2.099, nll_loss=0.226, ppl=1.17, wps=6899.5, ups=10.53, wpb=655.5, bsz=22.2, num_updates=12400, lr=9.93933e-05, gnorm=1.085, loss_scale=4, train_wall=9, wall=1845
2021-02-01 01:11:14 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:11:14 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:11:14 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:11:15 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:11:15 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:11:16 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail senders in Novell Groupwise.
2021-02-01 01:11:16 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:11:16 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:11:16 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:11:17 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk, the sender is added to your list. Any time you mark a message as junk, the sender is removed from your list.
2021-02-01 01:11:17 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:11:18 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:11:18 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:11:19 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:11:19 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:11:21 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:11:21 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:11:21 | INFO | valid | epoch 030 | valid on 'valid' subset | loss 2.395 | nll_loss 0.505 | ppl 1.42 | bleu 87.2 | wps 617.8 | wpb 525.5 | bsz 18.9 | num_updates 12475 | best_loss 2.383
2021-02-01 01:11:21 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:11:29 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_18/checkpoint_last.pt (epoch 30 @ 12475 updates, score 2.395) (writing took 8.157836089842021 seconds)
2021-02-01 01:11:29 | INFO | fairseq_cli.train | end of epoch 30 (average epoch stats below)
2021-02-01 01:11:29 | INFO | train | epoch 030 | loss 2.086 | nll_loss 0.209 | ppl 1.16 | wps 4980.7 | ups 7.64 | wpb 652.3 | bsz 24 | num_updates 12475 | lr 9.90941e-05 | gnorm 1.157 | loss_scale 4 | train_wall 39 | wall 1867
2021-02-01 01:11:29 | INFO | fairseq_cli.train | done training in 1865.5 seconds


###############################################################################
Peregrine Cluster
Job 17762479 for user 's3475743'
Finished at: Mon Feb  1 01:11:31 CET 2021

Job details:
============

Job ID              : 17762479
Name                : GNOME_18
User                : s3475743
Partition           : gpu
Nodes               : pg-gpu31
Number of Nodes     : 1
Cores               : 12
State               : COMPLETED
Submit              : 2021-02-01T00:30:12
Start               : 2021-02-01T00:40:10
End                 : 2021-02-01T01:11:31
Reserved walltime   : 23:55:00
Used walltime       : 00:31:21
Used CPU time       : 00:31:27 (efficiency:  8.36%)
% User (Computation): 67.24%
% System (I/O)      : 32.76%
Mem reserved        : 32G/node
Max Mem used        : 5.60G (pg-gpu31)
Max Disk Write      : 40.96K (pg-gpu31)
Max Disk Read       : 2.30M (pg-gpu31)
Average GPU usage   : 55.9% (pg-gpu31)


Acknowledgements:
=================

Please see this page for information about acknowledging Peregrine in your publications:

https://wiki.hpc.rug.nl/peregrine/introduction/scientific_output

################################################################################
