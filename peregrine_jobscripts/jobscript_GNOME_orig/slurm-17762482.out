
The following have been reloaded with a version change:
  1) GCCcore/8.3.0 => GCCcore/9.3.0
  2) binutils/2.32-GCCcore-8.3.0 => binutils/2.34-GCCcore-9.3.0
  3) zlib/1.2.11-GCCcore-8.3.0 => zlib/1.2.11-GCCcore-9.3.0

2021-02-01 00:42:22 | INFO | fairseq_cli.train | Namespace(activation_dropout=0.0, activation_fn='relu', adam_betas='(0.9, 0.98)', adam_eps=1e-08, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, arch='transformer_vaswani_wmt_en_de_big', attention_dropout=0.0, best_checkpoint_metric='loss', bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_suffix='', clip_norm=0.0, cpu=False, criterion='label_smoothed_cross_entropy', cross_self_attention=False, curriculum=0, data='../../../data-bin/custom_GNOME/orig_GNOME', data_buffer_size=10, dataset_impl=None, ddp_backend='c10d', decoder_attention_heads=16, decoder_embed_dim=1024, decoder_embed_path=None, decoder_ffn_embed_dim=4096, decoder_input_dim=1024, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=False, decoder_normalize_before=False, decoder_output_dim=1024, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', dropout=0.0, empty_cache_freq=0, encoder_attention_heads=16, encoder_embed_dim=1024, encoder_embed_path=None, encoder_ffn_embed_dim=8192, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=False, encoder_normalize_before=False, eval_bleu=True, eval_bleu_args='{"beam": 5, "max_len_a": 1.2, "max_len_b": 10}', eval_bleu_detok='moses', eval_bleu_detok_args=None, eval_bleu_print_samples=True, eval_bleu_remove_bpe='@@ ', eval_tokenized_bleu=False, fast_stat_sync=False, find_unused_parameters=False, fix_batches_to_gpus=False, fixed_validation_seed=None, fp16=True, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, label_smoothing=0.1, layernorm_embedding=False, left_pad_source='True', left_pad_target='False', load_alignments=False, localsgd_frequency=3, log_format=None, log_interval=100, lr=[0.000175], lr_scheduler='inverse_sqrt', max_epoch=30, max_sentences=None, max_sentences_valid=None, max_source_positions=1024, max_target_positions=1024, max_tokens=1024, max_tokens_valid=1024, max_update=0, maximize_best_checkpoint_metric=False, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=-1, model_parallel_size=1, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=True, no_token_positional_embeddings=False, nprocs_per_node=1, num_batch_buckets=0, num_workers=1, optimizer='adam', optimizer_overrides='{}', patience=-1, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, required_batch_size_multiple=8, reset_dataloader=True, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=True, restore_file='../../../models/wmt19.de-en.joined-dict.ensemble//model1.pt', save_dir='../checkpoints/GNOME_20', save_interval=1, save_interval_updates=0, scoring='bleu', seed=1, sentence_avg=False, share_all_embeddings=False, share_decoder_input_output_embed=True, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang=None, stop_time_hours=0, target_lang=None, task='translation', tensorboard_logdir='', threshold_loss_scale=None, tie_adaptive_weights=False, tokenizer=None, tpu=False, train_subset='train', truncate_source=False, update_freq=[1], upsample_primary=1, use_bmuf=False, use_old_adam=False, user_dir=None, valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, warmup_init_lr=-1, warmup_updates=4000, weight_decay=0.0)
2021-02-01 00:42:22 | INFO | fairseq.tasks.translation | [de] dictionary: 42024 types
2021-02-01 00:42:22 | INFO | fairseq.tasks.translation | [en] dictionary: 42024 types
2021-02-01 00:42:22 | INFO | fairseq.data.data_utils | loaded 151 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/valid.de-en.de
2021-02-01 00:42:22 | INFO | fairseq.data.data_utils | loaded 151 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/valid.de-en.en
2021-02-01 00:42:22 | INFO | fairseq.tasks.translation | ../../../data-bin/custom_GNOME/orig_GNOME valid de-en 151 examples
2021-02-01 00:42:26 | INFO | fairseq_cli.train | TransformerModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(42024, 1024, padding_idx=1)
    (embed_positions): SinusoidalPositionalEmbedding()
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=1024, out_features=8192, bias=True)
        (fc2): Linear(in_features=8192, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(42024, 1024, padding_idx=1)
    (embed_positions): SinusoidalPositionalEmbedding()
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (v_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (q_proj): Linear(in_features=1024, out_features=1024, bias=True)
          (out_proj): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=1024, out_features=4096, bias=True)
        (fc2): Linear(in_features=4096, out_features=1024, bias=True)
        (final_layer_norm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      )
    )
    (output_projection): Linear(in_features=1024, out_features=42024, bias=False)
  )
)
2021-02-01 00:42:26 | INFO | fairseq_cli.train | model transformer_vaswani_wmt_en_de_big, criterion LabelSmoothedCrossEntropyCriterion
2021-02-01 00:42:26 | INFO | fairseq_cli.train | num. model params: 312778752 (num. trained: 312778752)
2021-02-01 00:42:31 | INFO | fairseq.trainer | detected shared parameter: decoder.embed_tokens.weight <- decoder.output_projection.weight
2021-02-01 00:42:31 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2021-02-01 00:42:31 | INFO | fairseq.utils | rank   0: capabilities =  7.0  ; total memory = 32.000 GB ; name = GRID V100D-32Q                          
2021-02-01 00:42:31 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2021-02-01 00:42:31 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2021-02-01 00:42:31 | INFO | fairseq_cli.train | max tokens per GPU = 1024 and max sentences per GPU = None
2021-02-01 00:42:35 | INFO | fairseq.trainer | loaded checkpoint ../../../models/wmt19.de-en.joined-dict.ensemble//model1.pt (epoch 16 @ 0 updates)
2021-02-01 00:42:35 | INFO | fairseq.trainer | loading train data for epoch 1
2021-02-01 00:42:35 | INFO | fairseq.data.data_utils | loaded 10001 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/train.de-en.de
2021-02-01 00:42:35 | INFO | fairseq.data.data_utils | loaded 10001 examples from: ../../../data-bin/custom_GNOME/orig_GNOME/train.de-en.en
2021-02-01 00:42:35 | INFO | fairseq.tasks.translation | ../../../data-bin/custom_GNOME/orig_GNOME train de-en 10001 examples
2021-02-01 00:42:35 | INFO | fairseq_cli.train | begin training epoch 1
2021-02-01 00:42:36 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 64.0
2021-02-01 00:42:36 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 32.0
2021-02-01 00:42:37 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 16.0
2021-02-01 00:42:39 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 8.0
2021-02-01 00:42:45 | INFO | train_inner | epoch 001:    104 / 416 loss=4.15, nll_loss=2.491, ppl=5.62, wps=6811.8, ups=10.69, wpb=635.6, bsz=21.8, num_updates=100, lr=4.375e-06, gnorm=7.275, loss_scale=14, train_wall=9, wall=14
2021-02-01 00:42:54 | INFO | train_inner | epoch 001:    204 / 416 loss=4.126, nll_loss=2.487, ppl=5.61, wps=7060.6, ups=10.81, wpb=653.3, bsz=23.4, num_updates=200, lr=8.75e-06, gnorm=5.3, loss_scale=8, train_wall=9, wall=23
2021-02-01 00:43:03 | INFO | train_inner | epoch 001:    304 / 416 loss=3.722, nll_loss=2.037, ppl=4.1, wps=7024.6, ups=10.92, wpb=643.1, bsz=22.4, num_updates=300, lr=1.3125e-05, gnorm=4.32, loss_scale=8, train_wall=9, wall=32
2021-02-01 00:43:13 | INFO | train_inner | epoch 001:    404 / 416 loss=3.59, nll_loss=1.888, ppl=3.7, wps=7405.9, ups=10.86, wpb=682, bsz=28.8, num_updates=400, lr=1.75e-05, gnorm=4.863, loss_scale=8, train_wall=9, wall=42
2021-02-01 00:43:14 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:43:14 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:43:14 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:43:15 | INFO | fairseq.tasks.translation | example hypothesis: Use an OnlineWebDAV task or memo list.
2021-02-01 00:43:15 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:43:15 | INFO | fairseq.tasks.translation | example hypothesis: To remove an email address from your list of unwanted senders in Novell Groupwise.
2021-02-01 00:43:15 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:43:16 | INFO | fairseq.tasks.translation | example hypothesis: Set the conditions for the rule. For each condition, you must first select which part of the message will be checked, and then define the comparison.
2021-02-01 00:43:16 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:43:17 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as undesirable, the sender is added to your list of undesirable senders. Each time you mark messages as desirable, the sender is removed from your list of undesirable senders.
2021-02-01 00:43:17 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:43:18 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local hard disk, but other connections often only download the headers, and everything else only if you really want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have selected to store.
2021-02-01 00:43:18 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:43:19 | INFO | fairseq.tasks.translation | example hypothesis: Shared notes are basically messages that are scheduled for a special day and appear in the calendar on that date. You can use shared notes to display holidays, vacations, paydays, birthdays, etc. Shared notes are transferred to your calendar at the specified time. They will not appear in your or another user's mailbox.
2021-02-01 00:43:19 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:43:20 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution only evaluates its first occurrence, even if the message defines the header differently the second time. For example, if a message defines Resent-From: UNKNOWNTOKENINHYP as UNKNOWNTOKENINHYP engineeringUNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then again as UNKNOWNTOKENINHYP marketingUNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. Use regular expressions to filter messages that define the same headers more than once.
2021-02-01 00:43:20 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:43:20 | INFO | valid | epoch 001 | valid on 'valid' subset | loss 3.455 | nll_loss 1.746 | ppl 3.35 | bleu 35.6 | wps 639.8 | wpb 525.5 | bsz 18.9 | num_updates 412
2021-02-01 00:43:20 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:43:40 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 1 @ 412 updates, score 3.455) (writing took 19.923090619035065 seconds)
2021-02-01 00:43:40 | INFO | fairseq_cli.train | end of epoch 1 (average epoch stats below)
2021-02-01 00:43:40 | INFO | train | epoch 001 | loss 3.894 | nll_loss 2.223 | ppl 4.67 | wps 4149.9 | ups 6.36 | wpb 652.4 | bsz 24.1 | num_updates 412 | lr 1.8025e-05 | gnorm 5.426 | loss_scale 10 | train_wall 38 | wall 69
2021-02-01 00:43:40 | INFO | fairseq_cli.train | begin training epoch 1
2021-02-01 00:43:49 | INFO | train_inner | epoch 002:     88 / 416 loss=3.377, nll_loss=1.647, ppl=3.13, wps=1843, ups=2.78, wpb=662.5, bsz=26.9, num_updates=500, lr=2.1875e-05, gnorm=3.876, loss_scale=8, train_wall=9, wall=78
2021-02-01 00:43:58 | INFO | train_inner | epoch 002:    188 / 416 loss=3.366, nll_loss=1.632, ppl=3.1, wps=7059, ups=10.78, wpb=654.5, bsz=25.2, num_updates=600, lr=2.625e-05, gnorm=4.282, loss_scale=8, train_wall=9, wall=87
2021-02-01 00:44:07 | INFO | train_inner | epoch 002:    288 / 416 loss=3.313, nll_loss=1.571, ppl=2.97, wps=6972.3, ups=10.89, wpb=640.2, bsz=22.1, num_updates=700, lr=3.0625e-05, gnorm=3.669, loss_scale=8, train_wall=9, wall=96
2021-02-01 00:44:16 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 4.0
2021-02-01 00:44:16 | INFO | train_inner | epoch 002:    389 / 416 loss=3.38, nll_loss=1.645, ppl=3.13, wps=6949.5, ups=10.83, wpb=642, bsz=22.2, num_updates=800, lr=3.5e-05, gnorm=3.891, loss_scale=8, train_wall=9, wall=105
2021-02-01 00:44:19 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:44:19 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:44:19 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:44:20 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:44:20 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:44:20 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk list in Novell Groupwise.
2021-02-01 00:44:20 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:44:21 | INFO | fairseq.tasks.translation | example hypothesis: Set the conditions for the rule. For each condition, you need to first choose which part of the message to check, then define the comparison.
2021-02-01 00:44:21 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:44:22 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk, the sender is added to your junk list. Each time you mark messages as junk, the sender is removed from your junk list.
2021-02-01 00:44:22 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:44:23 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local hard disk, but other connections often download only the headers, and do the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:44:23 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:44:24 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are basically messages that are scheduled for a special day and appear in the calendar on that date. You can use shared memos to represent holidays, holidays, paydays, birthdays, etc. Shared Memos are sent to your calendar at the specified time. They will not appear in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:44:24 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:44:25 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution only evaluates its first occurrence, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineering UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then again as UNKNOWNTOKENINHYP marketing UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. Use regular expressions to filter messages that define the same headers more than once.
2021-02-01 00:44:25 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:44:25 | INFO | valid | epoch 002 | valid on 'valid' subset | loss 3.112 | nll_loss 1.354 | ppl 2.56 | bleu 43.48 | wps 666 | wpb 525.5 | bsz 18.9 | num_updates 827 | best_loss 3.112
2021-02-01 00:44:25 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:44:47 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 2 @ 827 updates, score 3.112) (writing took 21.982538458891213 seconds)
2021-02-01 00:44:47 | INFO | fairseq_cli.train | end of epoch 2 (average epoch stats below)
2021-02-01 00:44:47 | INFO | train | epoch 002 | loss 3.327 | nll_loss 1.588 | ppl 3.01 | wps 4052.9 | ups 6.21 | wpb 652.2 | bsz 24.1 | num_updates 827 | lr 3.61812e-05 | gnorm 3.852 | loss_scale 8 | train_wall 38 | wall 136
2021-02-01 00:44:47 | INFO | fairseq_cli.train | begin training epoch 2
2021-02-01 00:44:54 | INFO | train_inner | epoch 003:     73 / 416 loss=3.026, nll_loss=1.246, ppl=2.37, wps=1778.8, ups=2.64, wpb=672.7, bsz=25.6, num_updates=900, lr=3.9375e-05, gnorm=4.799, loss_scale=4, train_wall=9, wall=143
2021-02-01 00:45:03 | INFO | train_inner | epoch 003:    173 / 416 loss=2.916, nll_loss=1.124, ppl=2.18, wps=6893, ups=10.7, wpb=644.4, bsz=23.9, num_updates=1000, lr=4.375e-05, gnorm=3.11, loss_scale=4, train_wall=9, wall=152
2021-02-01 00:45:13 | INFO | train_inner | epoch 003:    273 / 416 loss=2.936, nll_loss=1.144, ppl=2.21, wps=6863.8, ups=10.89, wpb=630, bsz=21.8, num_updates=1100, lr=4.8125e-05, gnorm=3.335, loss_scale=4, train_wall=9, wall=162
2021-02-01 00:45:22 | INFO | train_inner | epoch 003:    373 / 416 loss=2.94, nll_loss=1.145, ppl=2.21, wps=7307.5, ups=10.76, wpb=679.3, bsz=25, num_updates=1200, lr=5.25e-05, gnorm=3.579, loss_scale=4, train_wall=9, wall=171
2021-02-01 00:45:26 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:45:26 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether a message has an attachment.
2021-02-01 00:45:26 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:45:27 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:45:27 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:45:27 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk list in Novell Groupwise.
2021-02-01 00:45:27 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:45:28 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you must first select which part of the message will be checked, then define the comparison.
2021-02-01 00:45:28 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:45:29 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk mail, the sender is added to your junk list. Each time you mark messages as junk mail, the sender is removed from your junk list.
2021-02-01 00:45:29 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:45:30 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:45:30 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:45:31 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are basically messages scheduled for a special day that appear on that date in the calendar. You can use shared memos to display vacations, holidays, pay days, birthdays, and so on. Delegated shared memos are sent to your calendar at the specified time. They do not appear in your mailbox or in any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:45:31 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:45:33 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution evaluates its first occurrence only, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineering _ example.com UNKNOWNTOKENINHYP and then redefines it as UNKNOWNTOKENINHYP marketing _ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. Use regular expressions to filter messages that use the same header multiple times.
2021-02-01 00:45:33 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:45:33 | INFO | valid | epoch 003 | valid on 'valid' subset | loss 2.834 | nll_loss 1.037 | ppl 2.05 | bleu 53.05 | wps 622.1 | wpb 525.5 | bsz 18.9 | num_updates 1243 | best_loss 2.834
2021-02-01 00:45:33 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:45:51 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 3 @ 1243 updates, score 2.834) (writing took 18.88198057282716 seconds)
2021-02-01 00:45:51 | INFO | fairseq_cli.train | end of epoch 3 (average epoch stats below)
2021-02-01 00:45:51 | INFO | train | epoch 003 | loss 2.956 | nll_loss 1.166 | ppl 2.24 | wps 4219.1 | ups 6.47 | wpb 652.3 | bsz 24 | num_updates 1243 | lr 5.43812e-05 | gnorm 3.824 | loss_scale 4 | train_wall 38 | wall 201
2021-02-01 00:45:51 | INFO | fairseq_cli.train | begin training epoch 3
2021-02-01 00:45:57 | INFO | train_inner | epoch 004:     57 / 416 loss=2.802, nll_loss=0.99, ppl=1.99, wps=1833.5, ups=2.86, wpb=641, bsz=24.1, num_updates=1300, lr=5.6875e-05, gnorm=3.595, loss_scale=4, train_wall=9, wall=206
2021-02-01 00:46:06 | INFO | train_inner | epoch 004:    157 / 416 loss=2.674, nll_loss=0.843, ppl=1.79, wps=7106.6, ups=10.9, wpb=652.2, bsz=24.8, num_updates=1400, lr=6.125e-05, gnorm=3.179, loss_scale=4, train_wall=9, wall=215
2021-02-01 00:46:15 | INFO | train_inner | epoch 004:    257 / 416 loss=2.813, nll_loss=1.002, ppl=2, wps=7004.1, ups=10.8, wpb=648.7, bsz=23, num_updates=1500, lr=6.5625e-05, gnorm=4.006, loss_scale=4, train_wall=9, wall=224
2021-02-01 00:46:24 | INFO | train_inner | epoch 004:    357 / 416 loss=2.63, nll_loss=0.796, ppl=1.74, wps=7027.3, ups=11.09, wpb=633.5, bsz=22.2, num_updates=1600, lr=7e-05, gnorm=3.012, loss_scale=4, train_wall=9, wall=233
2021-02-01 00:46:30 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:46:30 | INFO | fairseq.tasks.translation | example hypothesis: Filters depending on whether the message has an attachment.
2021-02-01 00:46:30 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:46:31 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task or memo list.
2021-02-01 00:46:31 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:46:31 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your list of unwanted senders on Novell Groupwise.
2021-02-01 00:46:31 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:46:32 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked, then define the comparison.
2021-02-01 00:46:32 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:46:33 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as unwanted, the sender is added to your list of unwanted senders. Each time you mark messages as unwanted, the sender is removed from your list of unwanted senders.
2021-02-01 00:46:33 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:46:34 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:46:34 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:46:35 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are basically messages scheduled for a specific day that appear on the calendar on that date. You can use shared memos to represent vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed on your calendar on the date specified. They are not placed in your mailbox or any other user UNKNOWNTOKENINHYP s.
2021-02-01 00:46:35 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:46:36 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution scores only first, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution filters as if the second value did not exist. To filter for messages that use the same headers more than once.
2021-02-01 00:46:36 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:46:36 | INFO | valid | epoch 004 | valid on 'valid' subset | loss 2.647 | nll_loss 0.818 | ppl 1.76 | bleu 61.5 | wps 656.9 | wpb 525.5 | bsz 18.9 | num_updates 1659 | best_loss 2.647
2021-02-01 00:46:36 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:46:57 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 4 @ 1659 updates, score 2.647) (writing took 20.764857383444905 seconds)
2021-02-01 00:46:57 | INFO | fairseq_cli.train | end of epoch 4 (average epoch stats below)
2021-02-01 00:46:57 | INFO | train | epoch 004 | loss 2.684 | nll_loss 0.856 | ppl 1.81 | wps 4133.1 | ups 6.34 | wpb 652.3 | bsz 24 | num_updates 1659 | lr 7.25812e-05 | gnorm 3.29 | loss_scale 4 | train_wall 38 | wall 266
2021-02-01 00:46:57 | INFO | fairseq_cli.train | begin training epoch 4
2021-02-01 00:47:01 | INFO | train_inner | epoch 005:     41 / 416 loss=2.582, nll_loss=0.742, ppl=1.67, wps=1835.9, ups=2.73, wpb=672.3, bsz=26.6, num_updates=1700, lr=7.4375e-05, gnorm=3.136, loss_scale=4, train_wall=9, wall=270
2021-02-01 00:47:10 | INFO | train_inner | epoch 005:    141 / 416 loss=2.46, nll_loss=0.6, ppl=1.52, wps=7117.4, ups=10.85, wpb=655.9, bsz=23.9, num_updates=1800, lr=7.875e-05, gnorm=2.988, loss_scale=4, train_wall=9, wall=279
2021-02-01 00:47:19 | INFO | train_inner | epoch 005:    241 / 416 loss=2.578, nll_loss=0.733, ppl=1.66, wps=7151.6, ups=10.8, wpb=662.1, bsz=21.9, num_updates=1900, lr=8.3125e-05, gnorm=3.272, loss_scale=4, train_wall=9, wall=288
2021-02-01 00:47:29 | INFO | train_inner | epoch 005:    341 / 416 loss=2.582, nll_loss=0.739, ppl=1.67, wps=6927.4, ups=10.71, wpb=646.7, bsz=24.8, num_updates=2000, lr=8.75e-05, gnorm=3.633, loss_scale=4, train_wall=9, wall=298
2021-02-01 00:47:36 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:47:36 | INFO | fairseq.tasks.translation | example hypothesis: Filters based on whether there is an attachment for the message.
2021-02-01 00:47:36 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:47:37 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:47:37 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:47:37 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk list in Novell Groupwise.
2021-02-01 00:47:37 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:47:38 | INFO | fairseq.tasks.translation | example hypothesis: Set the conditions for the rule. For each condition, you first select which part of the message will be checked, then define the comparison.
2021-02-01 00:47:38 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:47:39 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk mail, the sender is added to your junk list. Each time you mark messages as junk mail, the sender is removed from your junk list.
2021-02-01 00:47:39 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:47:40 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:47:40 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:47:41 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail except they are scheduled for a special day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your calendar on the date you specify. They are not placed in your or any other user UNKNOWNTOKENINHYP s mailbox.
2021-02-01 00:47:41 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:47:43 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message defines the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP, then redefines it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters it as if the second setting did not exist. To filter on messages that use headers multiple times, you need to use a regular expression.
2021-02-01 00:47:43 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:47:43 | INFO | valid | epoch 005 | valid on 'valid' subset | loss 2.553 | nll_loss 0.717 | ppl 1.64 | bleu 70.1 | wps 620.7 | wpb 525.5 | bsz 18.9 | num_updates 2075 | best_loss 2.553
2021-02-01 00:47:43 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:48:01 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 5 @ 2075 updates, score 2.553) (writing took 18.835974258370697 seconds)
2021-02-01 00:48:01 | INFO | fairseq_cli.train | end of epoch 5 (average epoch stats below)
2021-02-01 00:48:01 | INFO | train | epoch 005 | loss 2.529 | nll_loss 0.678 | ppl 1.6 | wps 4221.9 | ups 6.47 | wpb 652.3 | bsz 24 | num_updates 2075 | lr 9.07813e-05 | gnorm 3.26 | loss_scale 4 | train_wall 38 | wall 330
2021-02-01 00:48:01 | INFO | fairseq_cli.train | begin training epoch 5
2021-02-01 00:48:04 | INFO | train_inner | epoch 006:     25 / 416 loss=2.456, nll_loss=0.598, ppl=1.51, wps=1857.8, ups=2.85, wpb=651, bsz=24.4, num_updates=2100, lr=9.1875e-05, gnorm=3.009, loss_scale=4, train_wall=9, wall=333
2021-02-01 00:48:13 | INFO | train_inner | epoch 006:    125 / 416 loss=2.4, nll_loss=0.531, ppl=1.45, wps=7109.4, ups=10.73, wpb=662.8, bsz=25.6, num_updates=2200, lr=9.625e-05, gnorm=2.833, loss_scale=4, train_wall=9, wall=342
2021-02-01 00:48:22 | INFO | train_inner | epoch 006:    225 / 416 loss=2.481, nll_loss=0.622, ppl=1.54, wps=6953.4, ups=10.84, wpb=641.2, bsz=23.2, num_updates=2300, lr=0.000100625, gnorm=3.835, loss_scale=4, train_wall=9, wall=351
2021-02-01 00:48:32 | INFO | train_inner | epoch 006:    325 / 416 loss=2.559, nll_loss=0.712, ppl=1.64, wps=7137.3, ups=10.88, wpb=656.1, bsz=25, num_updates=2400, lr=0.000105, gnorm=4.326, loss_scale=4, train_wall=9, wall=361
2021-02-01 00:48:40 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:48:41 | INFO | fairseq.tasks.translation | example hypothesis: Filters based on whether there is an attachment for the email.
2021-02-01 00:48:41 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:48:41 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:48:41 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:48:42 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:48:42 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:48:42 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:48:42 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:48:43 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk messages, the sender is added to your junk mail list. Any time you mark messages as junk messages, the sender is removed from your junk mail list.
2021-02-01 00:48:43 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:48:44 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:48:44 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:48:45 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages scheduled for a particular day and displayed in the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are displayed in your Calendar on the date you specify. They are not displayed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:48:45 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:48:47 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second line did not exist. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:48:47 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:48:47 | INFO | valid | epoch 006 | valid on 'valid' subset | loss 2.515 | nll_loss 0.64 | ppl 1.56 | bleu 73.13 | wps 615.7 | wpb 525.5 | bsz 18.9 | num_updates 2491 | best_loss 2.515
2021-02-01 00:48:47 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:49:09 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 6 @ 2491 updates, score 2.515) (writing took 22.25084119103849 seconds)
2021-02-01 00:49:09 | INFO | fairseq_cli.train | end of epoch 6 (average epoch stats below)
2021-02-01 00:49:09 | INFO | train | epoch 006 | loss 2.474 | nll_loss 0.615 | ppl 1.53 | wps 3997.6 | ups 6.13 | wpb 652.3 | bsz 24 | num_updates 2491 | lr 0.000108981 | gnorm 3.469 | loss_scale 4 | train_wall 38 | wall 398
2021-02-01 00:49:09 | INFO | fairseq_cli.train | begin training epoch 6
2021-02-01 00:49:10 | INFO | train_inner | epoch 007:      9 / 416 loss=2.477, nll_loss=0.617, ppl=1.53, wps=1670.9, ups=2.59, wpb=646, bsz=23.6, num_updates=2500, lr=0.000109375, gnorm=2.982, loss_scale=4, train_wall=9, wall=399
2021-02-01 00:49:20 | INFO | train_inner | epoch 007:    109 / 416 loss=2.393, nll_loss=0.524, ppl=1.44, wps=7262.1, ups=10.75, wpb=675.6, bsz=25.6, num_updates=2600, lr=0.00011375, gnorm=3.21, loss_scale=4, train_wall=9, wall=409
2021-02-01 00:49:29 | INFO | train_inner | epoch 007:    209 / 416 loss=2.358, nll_loss=0.486, ppl=1.4, wps=6911.2, ups=10.61, wpb=651.4, bsz=25, num_updates=2700, lr=0.000118125, gnorm=2.876, loss_scale=4, train_wall=9, wall=418
2021-02-01 00:49:38 | INFO | train_inner | epoch 007:    309 / 416 loss=2.423, nll_loss=0.555, ppl=1.47, wps=6850, ups=10.74, wpb=637.7, bsz=21.4, num_updates=2800, lr=0.0001225, gnorm=3.437, loss_scale=4, train_wall=9, wall=427
2021-02-01 00:49:48 | INFO | train_inner | epoch 007:    409 / 416 loss=2.523, nll_loss=0.669, ppl=1.59, wps=6909.2, ups=10.64, wpb=649.3, bsz=23.9, num_updates=2900, lr=0.000126875, gnorm=3.741, loss_scale=4, train_wall=9, wall=437
2021-02-01 00:49:48 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:49:49 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for a message.
2021-02-01 00:49:49 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:49:49 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:49:49 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:49:50 | INFO | fairseq.tasks.translation | example hypothesis: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:49:50 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:49:51 | INFO | fairseq.tasks.translation | example hypothesis: Specify the conditions for the rule. For each condition, you must first select which part of the message you want to check, then define the comparison.
2021-02-01 00:49:51 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:49:51 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk, the sender is added to your junk mail list. Any time you mark messages as junk, the sender is removed from your junk mail list.
2021-02-01 00:49:51 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:49:52 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:49:52 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:49:54 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on that date in the calendar. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:49:54 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:49:55 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second declaration did not exist. Use a regular expression to identify those messages that use headers multiple times.
2021-02-01 00:49:55 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:49:55 | INFO | valid | epoch 007 | valid on 'valid' subset | loss 2.474 | nll_loss 0.605 | ppl 1.52 | bleu 78.34 | wps 615.5 | wpb 525.5 | bsz 18.9 | num_updates 2907 | best_loss 2.474
2021-02-01 00:49:55 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:50:12 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 7 @ 2907 updates, score 2.474) (writing took 17.04634528886527 seconds)
2021-02-01 00:50:12 | INFO | fairseq_cli.train | end of epoch 7 (average epoch stats below)
2021-02-01 00:50:12 | INFO | train | epoch 007 | loss 2.416 | nll_loss 0.55 | ppl 1.46 | wps 4308.3 | ups 6.61 | wpb 652.3 | bsz 24 | num_updates 2907 | lr 0.000127181 | gnorm 3.273 | loss_scale 4 | train_wall 38 | wall 461
2021-02-01 00:50:12 | INFO | fairseq_cli.train | begin training epoch 7
2021-02-01 00:50:14 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 2.0
2021-02-01 00:50:21 | INFO | train_inner | epoch 008:     94 / 416 loss=2.409, nll_loss=0.54, ppl=1.45, wps=1849.7, ups=3, wpb=616.4, bsz=22.9, num_updates=3000, lr=0.00013125, gnorm=3.058, loss_scale=3, train_wall=9, wall=470
2021-02-01 00:50:30 | INFO | train_inner | epoch 008:    194 / 416 loss=2.39, nll_loss=0.523, ppl=1.44, wps=6734.1, ups=10.81, wpb=622.8, bsz=21.4, num_updates=3100, lr=0.000135625, gnorm=3.886, loss_scale=2, train_wall=9, wall=479
2021-02-01 00:50:40 | INFO | train_inner | epoch 008:    294 / 416 loss=2.543, nll_loss=0.694, ppl=1.62, wps=7406.7, ups=10.52, wpb=704.1, bsz=26.9, num_updates=3200, lr=0.00014, gnorm=3.35, loss_scale=2, train_wall=9, wall=489
2021-02-01 00:50:49 | INFO | train_inner | epoch 008:    394 / 416 loss=2.364, nll_loss=0.491, ppl=1.41, wps=7036.4, ups=10.77, wpb=653.6, bsz=24.6, num_updates=3300, lr=0.000144375, gnorm=3.851, loss_scale=2, train_wall=9, wall=498
2021-02-01 00:50:51 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:50:52 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:50:52 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:50:52 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:50:52 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:50:53 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email from your junk mail list in Novell Groupwise.
2021-02-01 00:50:53 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:50:54 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:50:54 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:50:54 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your junk mail list. Any time you mark messages as junk mail, the sender is removed from your junk mail list.
2021-02-01 00:50:55 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:50:56 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:50:56 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:50:58 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar folder at the specified time. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:50:58 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:50:59 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message uses the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second declaration did not exist. Use a regular expression to filter messages that use headers multiple times.
2021-02-01 00:50:59 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:50:59 | INFO | valid | epoch 008 | valid on 'valid' subset | loss 2.495 | nll_loss 0.612 | ppl 1.53 | bleu 77.22 | wps 515.9 | wpb 525.5 | bsz 18.9 | num_updates 3322 | best_loss 2.474
2021-02-01 00:50:59 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:51:05 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 8 @ 3322 updates, score 2.495) (writing took 6.027053062804043 seconds)
2021-02-01 00:51:05 | INFO | fairseq_cli.train | end of epoch 8 (average epoch stats below)
2021-02-01 00:51:05 | INFO | train | epoch 008 | loss 2.426 | nll_loss 0.562 | ppl 1.48 | wps 5110.6 | ups 7.83 | wpb 652.8 | bsz 24.1 | num_updates 3322 | lr 0.000145338 | gnorm 3.539 | loss_scale 2 | train_wall 38 | wall 514
2021-02-01 00:51:05 | INFO | fairseq_cli.train | begin training epoch 8
2021-02-01 00:51:13 | INFO | train_inner | epoch 009:     78 / 416 loss=2.408, nll_loss=0.541, ppl=1.46, wps=2760.3, ups=4.22, wpb=653.9, bsz=25.5, num_updates=3400, lr=0.00014875, gnorm=3.862, loss_scale=2, train_wall=9, wall=522
2021-02-01 00:51:22 | INFO | train_inner | epoch 009:    178 / 416 loss=2.411, nll_loss=0.537, ppl=1.45, wps=7045.1, ups=10.73, wpb=656.4, bsz=22.4, num_updates=3500, lr=0.000153125, gnorm=3.247, loss_scale=2, train_wall=9, wall=531
2021-02-01 00:51:31 | INFO | train_inner | epoch 009:    278 / 416 loss=2.35, nll_loss=0.477, ppl=1.39, wps=7082.6, ups=10.7, wpb=661.8, bsz=23.9, num_updates=3600, lr=0.0001575, gnorm=3.16, loss_scale=2, train_wall=9, wall=540
2021-02-01 00:51:41 | INFO | train_inner | epoch 009:    378 / 416 loss=2.42, nll_loss=0.554, ppl=1.47, wps=6850.8, ups=10.77, wpb=636.1, bsz=24.6, num_updates=3700, lr=0.000161875, gnorm=3.412, loss_scale=2, train_wall=9, wall=550
2021-02-01 00:51:44 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:51:45 | INFO | fairseq.tasks.translation | example hypothesis: Filters based on whether there is an attachment for the email.
2021-02-01 00:51:45 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:51:45 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:51:45 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:51:46 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk list in Novell Groupwise.
2021-02-01 00:51:46 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:51:47 | INFO | fairseq.tasks.translation | example hypothesis: Defines the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:51:47 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:51:47 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark your messages as junk, the sender is added to your junk list. Any time you mark your junk mail as junk, the sender is removed from your junk list.
2021-02-01 00:51:47 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:51:48 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:51:48 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:51:49 | INFO | fairseq.tasks.translation | example hypothesis: Shared memos are like mail messages except they are scheduled for a particular day and displayed on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:51:49 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:51:51 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the same header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. If, for example, a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use the same headers multiple times, use the regular expression.
2021-02-01 00:51:51 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:51:51 | INFO | valid | epoch 009 | valid on 'valid' subset | loss 2.486 | nll_loss 0.622 | ppl 1.54 | bleu 75.81 | wps 619.7 | wpb 525.5 | bsz 18.9 | num_updates 3738 | best_loss 2.474
2021-02-01 00:51:51 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:51:58 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 9 @ 3738 updates, score 2.486) (writing took 6.761364107020199 seconds)
2021-02-01 00:51:58 | INFO | fairseq_cli.train | end of epoch 9 (average epoch stats below)
2021-02-01 00:51:58 | INFO | train | epoch 009 | loss 2.402 | nll_loss 0.531 | ppl 1.45 | wps 5158.8 | ups 7.91 | wpb 652.3 | bsz 24 | num_updates 3738 | lr 0.000163537 | gnorm 3.41 | loss_scale 2 | train_wall 38 | wall 567
2021-02-01 00:51:58 | INFO | fairseq_cli.train | begin training epoch 9
2021-02-01 00:52:04 | INFO | train_inner | epoch 010:     62 / 416 loss=2.38, nll_loss=0.505, ppl=1.42, wps=2798.4, ups=4.31, wpb=650, bsz=22.5, num_updates=3800, lr=0.00016625, gnorm=3.083, loss_scale=2, train_wall=9, wall=573
2021-02-01 00:52:13 | INFO | train_inner | epoch 010:    162 / 416 loss=2.388, nll_loss=0.515, ppl=1.43, wps=7238.5, ups=10.8, wpb=670.5, bsz=25.6, num_updates=3900, lr=0.000170625, gnorm=3.364, loss_scale=2, train_wall=9, wall=582
2021-02-01 00:52:22 | INFO | train_inner | epoch 010:    262 / 416 loss=2.447, nll_loss=0.582, ppl=1.5, wps=7096.9, ups=10.72, wpb=662, bsz=23.9, num_updates=4000, lr=0.000175, gnorm=3.513, loss_scale=2, train_wall=9, wall=592
2021-02-01 00:52:32 | INFO | train_inner | epoch 010:    362 / 416 loss=2.39, nll_loss=0.52, ppl=1.43, wps=7068.1, ups=10.74, wpb=658.4, bsz=24.8, num_updates=4100, lr=0.000172853, gnorm=3.497, loss_scale=2, train_wall=9, wall=601
2021-02-01 00:52:37 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:52:37 | INFO | fairseq.tasks.translation | example hypothesis: Filters based on whether there is an attachment for the email.
2021-02-01 00:52:37 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:52:38 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:52:38 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:52:39 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell GroupWise.
2021-02-01 00:52:39 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:52:39 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:52:39 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:52:40 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your junk mail list. Any time you mark the messages as junk mail, the sender is removed from your junk mail list.
2021-02-01 00:52:40 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:52:41 | INFO | fairseq.tasks.translation | example hypothesis: POP downloads all the messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:52:41 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:52:42 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear in the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:52:42 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:52:44 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:52:44 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:52:44 | INFO | valid | epoch 010 | valid on 'valid' subset | loss 2.515 | nll_loss 0.631 | ppl 1.55 | bleu 76.01 | wps 597.3 | wpb 525.5 | bsz 18.9 | num_updates 4154 | best_loss 2.474
2021-02-01 00:52:44 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:52:51 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 10 @ 4154 updates, score 2.515) (writing took 6.703739660792053 seconds)
2021-02-01 00:52:51 | INFO | fairseq_cli.train | end of epoch 10 (average epoch stats below)
2021-02-01 00:52:51 | INFO | train | epoch 010 | loss 2.395 | nll_loss 0.524 | ppl 1.44 | wps 5142.2 | ups 7.88 | wpb 652.3 | bsz 24 | num_updates 4154 | lr 0.000171726 | gnorm 3.398 | loss_scale 2 | train_wall 38 | wall 620
2021-02-01 00:52:51 | INFO | fairseq_cli.train | begin training epoch 10
2021-02-01 00:52:55 | INFO | train_inner | epoch 011:     46 / 416 loss=2.39, nll_loss=0.516, ppl=1.43, wps=2696.6, ups=4.3, wpb=626.8, bsz=21.1, num_updates=4200, lr=0.000170783, gnorm=3.362, loss_scale=2, train_wall=9, wall=624
2021-02-01 00:53:04 | INFO | train_inner | epoch 011:    146 / 416 loss=2.313, nll_loss=0.433, ppl=1.35, wps=7110.2, ups=10.88, wpb=653.3, bsz=26.1, num_updates=4300, lr=0.000168785, gnorm=3.038, loss_scale=2, train_wall=9, wall=633
2021-02-01 00:53:06 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 1.0
2021-02-01 00:53:14 | INFO | train_inner | epoch 011:    247 / 416 loss=2.387, nll_loss=0.511, ppl=1.43, wps=6609.8, ups=10.68, wpb=618.8, bsz=21.4, num_updates=4400, lr=0.000166856, gnorm=3.725, loss_scale=1, train_wall=9, wall=643
2021-02-01 00:53:23 | INFO | train_inner | epoch 011:    347 / 416 loss=2.37, nll_loss=0.5, ppl=1.41, wps=7226.2, ups=10.84, wpb=666.8, bsz=24, num_updates=4500, lr=0.000164992, gnorm=4.819, loss_scale=1, train_wall=9, wall=652
2021-02-01 00:53:29 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:53:30 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:53:30 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:53:30 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:53:30 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:53:31 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk list in Novell Groupwise.
2021-02-01 00:53:31 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:53:31 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you must first select which part of the message will be checked and then define the comparison.
2021-02-01 00:53:31 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:53:32 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk, the sender is added to your list of junk messages. When you mark messages as junk, the sender is removed from your list of junk messages.
2021-02-01 00:53:32 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:53:33 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the header bars, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:53:33 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:53:34 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:53:34 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:53:36 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header bar more than once, Evolution pays attention only to the first instance, even if the message defines the header bar differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as if the second declaration did not occur. Use regular expressions to filter messages that define the same header multiple times.
2021-02-01 00:53:36 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:53:36 | INFO | valid | epoch 011 | valid on 'valid' subset | loss 2.494 | nll_loss 0.621 | ppl 1.54 | bleu 79.02 | wps 617.4 | wpb 525.5 | bsz 18.9 | num_updates 4569 | best_loss 2.474
2021-02-01 00:53:36 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:53:44 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 11 @ 4569 updates, score 2.494) (writing took 8.04242111556232 seconds)
2021-02-01 00:53:44 | INFO | fairseq_cli.train | end of epoch 11 (average epoch stats below)
2021-02-01 00:53:44 | INFO | train | epoch 011 | loss 2.352 | nll_loss 0.477 | ppl 1.39 | wps 5062.7 | ups 7.76 | wpb 652.2 | bsz 24.1 | num_updates 4569 | lr 0.000163741 | gnorm 3.732 | loss_scale 1 | train_wall 38 | wall 673
2021-02-01 00:53:44 | INFO | fairseq_cli.train | begin training epoch 11
2021-02-01 00:53:47 | INFO | train_inner | epoch 012:     31 / 416 loss=2.298, nll_loss=0.42, ppl=1.34, wps=2794.2, ups=4.12, wpb=677.5, bsz=27.6, num_updates=4600, lr=0.000163188, gnorm=3.295, loss_scale=1, train_wall=9, wall=676
2021-02-01 00:53:56 | INFO | train_inner | epoch 012:    131 / 416 loss=2.287, nll_loss=0.408, ppl=1.33, wps=6774.2, ups=10.7, wpb=632.9, bsz=23.1, num_updates=4700, lr=0.000161443, gnorm=3.969, loss_scale=1, train_wall=9, wall=685
2021-02-01 00:54:06 | INFO | train_inner | epoch 012:    231 / 416 loss=2.315, nll_loss=0.44, ppl=1.36, wps=6843.1, ups=10.76, wpb=636.1, bsz=23.4, num_updates=4800, lr=0.000159752, gnorm=2.947, loss_scale=1, train_wall=9, wall=695
2021-02-01 00:54:15 | INFO | train_inner | epoch 012:    331 / 416 loss=2.329, nll_loss=0.453, ppl=1.37, wps=7123.8, ups=10.89, wpb=654.1, bsz=25.2, num_updates=4900, lr=0.000158114, gnorm=2.979, loss_scale=1, train_wall=9, wall=704
2021-02-01 00:54:23 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:54:23 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:54:23 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:54:24 | INFO | fairseq.tasks.translation | example hypothesis: Using an on-line WebDAV task list or memo list.
2021-02-01 00:54:24 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:54:24 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your Novell Groupwise junk mail list.
2021-02-01 00:54:24 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:54:25 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:54:25 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:54:26 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk, that sender is added to your list of junk mail. Any time you mark the sender as not Junk, that source of information is removed from your list of junk mail.
2021-02-01 00:54:26 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:54:27 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:54:27 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:54:28 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear in the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are put in your Calendar on the date you specify. You are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:54:28 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:54:30 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:54:30 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:54:30 | INFO | valid | epoch 012 | valid on 'valid' subset | loss 2.46 | nll_loss 0.583 | ppl 1.5 | bleu 80.7 | wps 615.8 | wpb 525.5 | bsz 18.9 | num_updates 4985 | best_loss 2.46
2021-02-01 00:54:30 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:54:50 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 12 @ 4985 updates, score 2.46) (writing took 20.091862079687417 seconds)
2021-02-01 00:54:50 | INFO | fairseq_cli.train | end of epoch 12 (average epoch stats below)
2021-02-01 00:54:50 | INFO | train | epoch 012 | loss 2.312 | nll_loss 0.435 | ppl 1.35 | wps 4138.8 | ups 6.35 | wpb 652.3 | bsz 24 | num_updates 4985 | lr 0.00015676 | gnorm 3.196 | loss_scale 1 | train_wall 38 | wall 739
2021-02-01 00:54:50 | INFO | fairseq_cli.train | begin training epoch 12
2021-02-01 00:54:51 | INFO | train_inner | epoch 013:     15 / 416 loss=2.312, nll_loss=0.433, ppl=1.35, wps=1891.9, ups=2.76, wpb=685.6, bsz=23.4, num_updates=5000, lr=0.000156525, gnorm=2.942, loss_scale=1, train_wall=9, wall=740
2021-02-01 00:55:00 | INFO | train_inner | epoch 013:    115 / 416 loss=2.226, nll_loss=0.344, ppl=1.27, wps=7065.7, ups=10.74, wpb=657.9, bsz=25.1, num_updates=5100, lr=0.000154983, gnorm=2.455, loss_scale=1, train_wall=9, wall=749
2021-02-01 00:55:10 | INFO | train_inner | epoch 013:    215 / 416 loss=2.309, nll_loss=0.436, ppl=1.35, wps=7156.8, ups=10.96, wpb=653, bsz=26.7, num_updates=5200, lr=0.000153485, gnorm=2.97, loss_scale=1, train_wall=9, wall=759
2021-02-01 00:55:19 | INFO | train_inner | epoch 013:    315 / 416 loss=2.294, nll_loss=0.417, ppl=1.33, wps=6890.7, ups=10.82, wpb=636.8, bsz=20.4, num_updates=5300, lr=0.00015203, gnorm=2.986, loss_scale=1, train_wall=9, wall=768
2021-02-01 00:55:28 | INFO | train_inner | epoch 013:    415 / 416 loss=2.25, nll_loss=0.368, ppl=1.29, wps=7174.4, ups=10.97, wpb=653.9, bsz=24.4, num_updates=5400, lr=0.000150616, gnorm=3.266, loss_scale=1, train_wall=9, wall=777
2021-02-01 00:55:28 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:55:29 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:55:29 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:55:29 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:55:29 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:55:30 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk list in Novell GroupWise.
2021-02-01 00:55:30 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:55:30 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:55:30 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:55:31 | INFO | fairseq.tasks.translation | example hypothesis: Each time you mark messages as junk, the sender is added to your junk list. Each time you mark messages, the sender is removed from your junk list.
2021-02-01 00:55:31 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:55:32 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:55:32 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:55:33 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for each particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:55:33 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:55:35 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header multiple times, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:55:35 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:55:35 | INFO | valid | epoch 013 | valid on 'valid' subset | loss 2.433 | nll_loss 0.574 | ppl 1.49 | bleu 82.34 | wps 620.8 | wpb 525.5 | bsz 18.9 | num_updates 5401 | best_loss 2.433
2021-02-01 00:55:35 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:55:53 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 13 @ 5401 updates, score 2.433) (writing took 18.20314691774547 seconds)
2021-02-01 00:55:53 | INFO | fairseq_cli.train | end of epoch 13 (average epoch stats below)
2021-02-01 00:55:53 | INFO | train | epoch 013 | loss 2.27 | nll_loss 0.391 | ppl 1.31 | wps 4275.1 | ups 6.55 | wpb 652.3 | bsz 24 | num_updates 5401 | lr 0.000150602 | gnorm 2.92 | loss_scale 1 | train_wall 38 | wall 802
2021-02-01 00:55:53 | INFO | fairseq_cli.train | begin training epoch 13
2021-02-01 00:56:02 | INFO | train_inner | epoch 014:     99 / 416 loss=2.242, nll_loss=0.36, ppl=1.28, wps=1981.8, ups=2.9, wpb=682.5, bsz=25.5, num_updates=5500, lr=0.000149241, gnorm=2.651, loss_scale=1, train_wall=9, wall=811
2021-02-01 00:56:12 | INFO | train_inner | epoch 014:    199 / 416 loss=2.236, nll_loss=0.355, ppl=1.28, wps=6831.9, ups=10.81, wpb=632, bsz=25.1, num_updates=5600, lr=0.000147902, gnorm=2.882, loss_scale=1, train_wall=9, wall=821
2021-02-01 00:56:21 | INFO | train_inner | epoch 014:    299 / 416 loss=2.237, nll_loss=0.359, ppl=1.28, wps=7218.4, ups=10.89, wpb=662.7, bsz=23.2, num_updates=5700, lr=0.000146599, gnorm=2.723, loss_scale=1, train_wall=9, wall=830
2021-02-01 00:56:30 | INFO | train_inner | epoch 014:    399 / 416 loss=2.205, nll_loss=0.319, ppl=1.25, wps=6797.8, ups=10.73, wpb=633.8, bsz=22.9, num_updates=5800, lr=0.00014533, gnorm=1.933, loss_scale=1, train_wall=9, wall=839
2021-02-01 00:56:32 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:56:32 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:56:32 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:56:33 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:56:33 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:56:33 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address in Novell Groupwise.
2021-02-01 00:56:33 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:56:34 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you must first select which part of the message will be checked and then define the comparison.
2021-02-01 00:56:34 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:56:35 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of spam mail. Any time you mark a message as junk mail, the sender is removed from your list of junk mail.
2021-02-01 00:56:35 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:56:36 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:56:36 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:56:37 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:56:37 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:56:39 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter messages that use the same headers more than once, use a regular expression.
2021-02-01 00:56:39 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:56:39 | INFO | valid | epoch 014 | valid on 'valid' subset | loss 2.436 | nll_loss 0.581 | ppl 1.5 | bleu 83.06 | wps 591.8 | wpb 525.5 | bsz 18.9 | num_updates 5817 | best_loss 2.433
2021-02-01 00:56:39 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:56:45 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 14 @ 5817 updates, score 2.436) (writing took 5.844259075820446 seconds)
2021-02-01 00:56:45 | INFO | fairseq_cli.train | end of epoch 14 (average epoch stats below)
2021-02-01 00:56:45 | INFO | train | epoch 014 | loss 2.228 | nll_loss 0.346 | ppl 1.27 | wps 5258.3 | ups 8.06 | wpb 652.3 | bsz 24 | num_updates 5817 | lr 0.000145117 | gnorm 2.509 | loss_scale 1 | train_wall 38 | wall 854
2021-02-01 00:56:45 | INFO | fairseq_cli.train | begin training epoch 14
2021-02-01 00:56:50 | INFO | fairseq.trainer | NOTE: overflow detected, setting loss scale to: 0.5
2021-02-01 00:56:52 | INFO | train_inner | epoch 015:     84 / 416 loss=2.192, nll_loss=0.31, ppl=1.24, wps=2843.1, ups=4.48, wpb=635.3, bsz=22.5, num_updates=5900, lr=0.000144093, gnorm=2.718, loss_scale=1, train_wall=9, wall=862
2021-02-01 00:57:02 | INFO | train_inner | epoch 015:    184 / 416 loss=2.199, nll_loss=0.314, ppl=1.24, wps=6948, ups=10.94, wpb=635.2, bsz=23.9, num_updates=6000, lr=0.000142887, gnorm=2.104, loss_scale=0, train_wall=9, wall=871
2021-02-01 00:57:11 | INFO | train_inner | epoch 015:    284 / 416 loss=2.229, nll_loss=0.349, ppl=1.27, wps=7042.7, ups=10.84, wpb=649.4, bsz=22.7, num_updates=6100, lr=0.000141711, gnorm=2.571, loss_scale=0, train_wall=9, wall=880
2021-02-01 00:57:20 | INFO | train_inner | epoch 015:    384 / 416 loss=2.212, nll_loss=0.333, ppl=1.26, wps=7198.2, ups=10.69, wpb=673.5, bsz=26.4, num_updates=6200, lr=0.000140563, gnorm=2.681, loss_scale=0, train_wall=9, wall=889
2021-02-01 00:57:23 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:57:24 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 00:57:24 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:57:24 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:57:24 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:57:25 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:57:25 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:57:26 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. You must first select which part of the message will be checked and then define the comparison.
2021-02-01 00:57:26 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:57:26 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark the messages as junk mail, the sender is added to your junk mail list. Any time you mark the messages as junk mail, the sender is removed from your junk mail list.
2021-02-01 00:57:26 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:57:27 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:57:27 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:57:29 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:57:29 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:57:30 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses the header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, when a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. Use regular expressions to filter on messages that use the same headers multiple times.
2021-02-01 00:57:30 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:57:30 | INFO | valid | epoch 015 | valid on 'valid' subset | loss 2.413 | nll_loss 0.562 | ppl 1.48 | bleu 83.81 | wps 631.6 | wpb 525.5 | bsz 18.9 | num_updates 6232 | best_loss 2.413
2021-02-01 00:57:30 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:57:50 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 15 @ 6232 updates, score 2.413) (writing took 19.52984288148582 seconds)
2021-02-01 00:57:50 | INFO | fairseq_cli.train | end of epoch 15 (average epoch stats below)
2021-02-01 00:57:50 | INFO | train | epoch 015 | loss 2.208 | nll_loss 0.327 | ppl 1.25 | wps 4177.6 | ups 6.41 | wpb 652 | bsz 24.1 | num_updates 6232 | lr 0.000140202 | gnorm 2.549 | loss_scale 1 | train_wall 38 | wall 919
2021-02-01 00:57:50 | INFO | fairseq_cli.train | begin training epoch 15
2021-02-01 00:57:56 | INFO | train_inner | epoch 016:     68 / 416 loss=2.172, nll_loss=0.29, ppl=1.22, wps=1875.9, ups=2.8, wpb=670.1, bsz=24.4, num_updates=6300, lr=0.000139443, gnorm=2.194, loss_scale=0, train_wall=9, wall=925
2021-02-01 00:58:05 | INFO | train_inner | epoch 016:    168 / 416 loss=2.175, nll_loss=0.293, ppl=1.22, wps=6784.2, ups=10.95, wpb=619.6, bsz=22.5, num_updates=6400, lr=0.00013835, gnorm=1.793, loss_scale=0, train_wall=9, wall=934
2021-02-01 00:58:14 | INFO | train_inner | epoch 016:    268 / 416 loss=2.188, nll_loss=0.303, ppl=1.23, wps=6631.2, ups=10.74, wpb=617.6, bsz=24, num_updates=6500, lr=0.000137281, gnorm=2.268, loss_scale=0, train_wall=9, wall=943
2021-02-01 00:58:24 | INFO | train_inner | epoch 016:    368 / 416 loss=2.194, nll_loss=0.315, ppl=1.24, wps=7708.3, ups=10.89, wpb=707.6, bsz=26.1, num_updates=6600, lr=0.000136237, gnorm=2.339, loss_scale=0, train_wall=9, wall=953
2021-02-01 00:58:28 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:58:28 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:58:28 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:58:29 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:58:29 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:58:30 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk list in Novell Groupwise.
2021-02-01 00:58:30 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:58:30 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:58:30 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:58:31 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark the message as junk, the sender is added to your junk list. Any time you mark the message as junk mail, the sender is removed from your junk list.
2021-02-01 00:58:31 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:58:32 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:58:32 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:58:34 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:58:34 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:58:35 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:58:35 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:58:35 | INFO | valid | epoch 016 | valid on 'valid' subset | loss 2.383 | nll_loss 0.513 | ppl 1.43 | bleu 85.75 | wps 594.4 | wpb 525.5 | bsz 18.9 | num_updates 6648 | best_loss 2.383
2021-02-01 00:58:35 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:58:52 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 16 @ 6648 updates, score 2.383) (writing took 16.78184846136719 seconds)
2021-02-01 00:58:52 | INFO | fairseq_cli.train | end of epoch 16 (average epoch stats below)
2021-02-01 00:58:52 | INFO | train | epoch 016 | loss 2.182 | nll_loss 0.3 | ppl 1.23 | wps 4354.4 | ups 6.68 | wpb 652.3 | bsz 24 | num_updates 6648 | lr 0.000135745 | gnorm 2.127 | loss_scale 0 | train_wall 38 | wall 981
2021-02-01 00:58:52 | INFO | fairseq_cli.train | begin training epoch 16
2021-02-01 00:58:57 | INFO | train_inner | epoch 017:     52 / 416 loss=2.165, nll_loss=0.283, ppl=1.22, wps=2009.7, ups=3.02, wpb=664.9, bsz=25, num_updates=6700, lr=0.000135217, gnorm=2.059, loss_scale=0, train_wall=9, wall=986
2021-02-01 00:59:06 | INFO | train_inner | epoch 017:    152 / 416 loss=2.169, nll_loss=0.286, ppl=1.22, wps=7156.5, ups=10.98, wpb=652, bsz=22.1, num_updates=6800, lr=0.000134219, gnorm=1.989, loss_scale=0, train_wall=9, wall=995
2021-02-01 00:59:15 | INFO | train_inner | epoch 017:    252 / 416 loss=2.167, nll_loss=0.284, ppl=1.22, wps=6974.8, ups=11, wpb=633.8, bsz=22.6, num_updates=6900, lr=0.000133243, gnorm=1.993, loss_scale=0, train_wall=9, wall=1004
2021-02-01 00:59:24 | INFO | train_inner | epoch 017:    352 / 416 loss=2.171, nll_loss=0.291, ppl=1.22, wps=7074.7, ups=10.83, wpb=653.2, bsz=26.9, num_updates=7000, lr=0.000132288, gnorm=1.753, loss_scale=0, train_wall=9, wall=1013
2021-02-01 00:59:30 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 00:59:31 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 00:59:31 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 00:59:31 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 00:59:31 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 00:59:32 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:59:32 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 00:59:32 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:59:32 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 00:59:33 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your junk list. Any time you mark messages as junk mail, the sender is removed from your junk list.
2021-02-01 00:59:33 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 00:59:34 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:59:34 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 00:59:36 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 00:59:36 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 00:59:37 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:59:37 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 00:59:37 | INFO | valid | epoch 017 | valid on 'valid' subset | loss 2.393 | nll_loss 0.533 | ppl 1.45 | bleu 84.58 | wps 590.9 | wpb 525.5 | bsz 18.9 | num_updates 7064 | best_loss 2.383
2021-02-01 00:59:37 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 00:59:43 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 17 @ 7064 updates, score 2.393) (writing took 5.739048207178712 seconds)
2021-02-01 00:59:43 | INFO | fairseq_cli.train | end of epoch 17 (average epoch stats below)
2021-02-01 00:59:43 | INFO | train | epoch 017 | loss 2.166 | nll_loss 0.285 | ppl 1.22 | wps 5304.5 | ups 8.13 | wpb 652.3 | bsz 24 | num_updates 7064 | lr 0.000131687 | gnorm 1.971 | loss_scale 0 | train_wall 37 | wall 1032
2021-02-01 00:59:43 | INFO | fairseq_cli.train | begin training epoch 17
2021-02-01 00:59:46 | INFO | train_inner | epoch 018:     36 / 416 loss=2.159, nll_loss=0.278, ppl=1.21, wps=2912.1, ups=4.49, wpb=648, bsz=22.5, num_updates=7100, lr=0.000131353, gnorm=2.063, loss_scale=0, train_wall=9, wall=1035
2021-02-01 00:59:55 | INFO | train_inner | epoch 018:    136 / 416 loss=2.135, nll_loss=0.251, ppl=1.19, wps=7039.1, ups=10.92, wpb=644.5, bsz=24.9, num_updates=7200, lr=0.000130437, gnorm=1.704, loss_scale=0, train_wall=9, wall=1045
2021-02-01 01:00:05 | INFO | train_inner | epoch 018:    236 / 416 loss=2.159, nll_loss=0.281, ppl=1.21, wps=7081.3, ups=10.73, wpb=659.8, bsz=23.6, num_updates=7300, lr=0.000129541, gnorm=1.94, loss_scale=0, train_wall=9, wall=1054
2021-02-01 01:00:14 | INFO | train_inner | epoch 018:    336 / 416 loss=2.191, nll_loss=0.311, ppl=1.24, wps=7072.8, ups=10.94, wpb=646.7, bsz=23.5, num_updates=7400, lr=0.000128663, gnorm=1.997, loss_scale=0, train_wall=9, wall=1063
2021-02-01 01:00:21 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:00:22 | INFO | fairseq.tasks.translation | example hypothesis: Depending on whether there is an attachment for the message.
2021-02-01 01:00:22 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:00:22 | INFO | fairseq.tasks.translation | example hypothesis: Use an online WebDAV task list or memo list.
2021-02-01 01:00:22 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:00:23 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list.
2021-02-01 01:00:23 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:00:24 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:00:24 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:00:24 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk messages, the sender is added to your list of junk messages. Any time you mark the message as junk messages, the sender is removed from your list of junk messages.
2021-02-01 01:00:24 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:00:25 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:00:25 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:00:27 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on this date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:00:27 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:00:28 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:00:28 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:00:28 | INFO | valid | epoch 018 | valid on 'valid' subset | loss 2.425 | nll_loss 0.571 | ppl 1.49 | bleu 84.22 | wps 633 | wpb 525.5 | bsz 18.9 | num_updates 7480 | best_loss 2.383
2021-02-01 01:00:28 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:00:35 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 18 @ 7480 updates, score 2.425) (writing took 7.162923394702375 seconds)
2021-02-01 01:00:35 | INFO | fairseq_cli.train | end of epoch 18 (average epoch stats below)
2021-02-01 01:00:35 | INFO | train | epoch 018 | loss 2.152 | nll_loss 0.271 | ppl 1.21 | wps 5195.2 | ups 7.96 | wpb 652.3 | bsz 24 | num_updates 7480 | lr 0.000127973 | gnorm 1.804 | loss_scale 0 | train_wall 38 | wall 1084
2021-02-01 01:00:35 | INFO | fairseq_cli.train | begin training epoch 18
2021-02-01 01:00:37 | INFO | train_inner | epoch 019:     20 / 416 loss=2.131, nll_loss=0.251, ppl=1.19, wps=2932.1, ups=4.28, wpb=685.5, bsz=25.5, num_updates=7500, lr=0.000127802, gnorm=1.567, loss_scale=0, train_wall=9, wall=1086
2021-02-01 01:00:46 | INFO | train_inner | epoch 019:    120 / 416 loss=2.169, nll_loss=0.291, ppl=1.22, wps=6948.2, ups=10.93, wpb=636, bsz=21.5, num_updates=7600, lr=0.000126958, gnorm=1.976, loss_scale=0, train_wall=9, wall=1096
2021-02-01 01:00:56 | INFO | train_inner | epoch 019:    220 / 416 loss=2.122, nll_loss=0.241, ppl=1.18, wps=7310.1, ups=10.89, wpb=671.5, bsz=26.7, num_updates=7700, lr=0.000126131, gnorm=1.456, loss_scale=0, train_wall=9, wall=1105
2021-02-01 01:01:05 | INFO | train_inner | epoch 019:    320 / 416 loss=2.127, nll_loss=0.249, ppl=1.19, wps=7012, ups=10.89, wpb=643.8, bsz=26.6, num_updates=7800, lr=0.00012532, gnorm=1.562, loss_scale=0, train_wall=9, wall=1114
2021-02-01 01:01:14 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:01:14 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:01:14 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:01:15 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:01:15 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:01:16 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list.
2021-02-01 01:01:16 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:01:16 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message part of the message is checked and then define the comparison.
2021-02-01 01:01:16 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:01:17 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark your message as junk mail, the sender is added to your junk mail list. Any time you mark your message as junk mail, the sender is removed from your junk list.
2021-02-01 01:01:17 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:01:18 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:01:18 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:01:19 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on this date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:01:19 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:01:21 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:01:21 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:01:21 | INFO | valid | epoch 019 | valid on 'valid' subset | loss 2.39 | nll_loss 0.534 | ppl 1.45 | bleu 85.86 | wps 594.6 | wpb 525.5 | bsz 18.9 | num_updates 7896 | best_loss 2.383
2021-02-01 01:01:21 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:01:27 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 19 @ 7896 updates, score 2.39) (writing took 5.741994798183441 seconds)
2021-02-01 01:01:27 | INFO | fairseq_cli.train | end of epoch 19 (average epoch stats below)
2021-02-01 01:01:27 | INFO | train | epoch 019 | loss 2.139 | nll_loss 0.259 | ppl 1.2 | wps 5269.8 | ups 8.08 | wpb 652.3 | bsz 24 | num_updates 7896 | lr 0.000124556 | gnorm 1.634 | loss_scale 0 | train_wall 38 | wall 1136
2021-02-01 01:01:27 | INFO | fairseq_cli.train | begin training epoch 19
2021-02-01 01:01:27 | INFO | train_inner | epoch 020:      4 / 416 loss=2.133, nll_loss=0.251, ppl=1.19, wps=2903.4, ups=4.48, wpb=648.1, bsz=20.9, num_updates=7900, lr=0.000124524, gnorm=1.573, loss_scale=0, train_wall=9, wall=1136
2021-02-01 01:01:36 | INFO | train_inner | epoch 020:    104 / 416 loss=2.131, nll_loss=0.251, ppl=1.19, wps=7054.9, ups=10.76, wpb=655.4, bsz=25.5, num_updates=8000, lr=0.000123744, gnorm=1.767, loss_scale=0, train_wall=9, wall=1146
2021-02-01 01:01:46 | INFO | train_inner | epoch 020:    204 / 416 loss=2.128, nll_loss=0.248, ppl=1.19, wps=7060.6, ups=11, wpb=641.7, bsz=24.5, num_updates=8100, lr=0.000122977, gnorm=1.514, loss_scale=0, train_wall=9, wall=1155
2021-02-01 01:01:55 | INFO | train_inner | epoch 020:    304 / 416 loss=2.161, nll_loss=0.283, ppl=1.22, wps=7096.8, ups=10.9, wpb=651.1, bsz=21.6, num_updates=8200, lr=0.000122225, gnorm=1.893, loss_scale=0, train_wall=9, wall=1164
2021-02-01 01:02:04 | INFO | train_inner | epoch 020:    404 / 416 loss=2.125, nll_loss=0.249, ppl=1.19, wps=7248, ups=10.85, wpb=668.1, bsz=24.3, num_updates=8300, lr=0.000121487, gnorm=1.532, loss_scale=0, train_wall=9, wall=1173
2021-02-01 01:02:05 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:02:06 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:02:06 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:02:06 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:02:06 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:02:07 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list.
2021-02-01 01:02:07 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:02:07 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:02:07 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:02:08 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark your messages as junk mail, the sender is added to your list of junk mail. Any time you mark your messages as junk mail, the sender is removed from your list of junk mail.
2021-02-01 01:02:08 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:02:09 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:02:09 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:02:10 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:02:10 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:02:12 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP example.com UNKNOWNTOKENINHYP, Evolution defines as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:02:12 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:02:12 | INFO | valid | epoch 020 | valid on 'valid' subset | loss 2.399 | nll_loss 0.547 | ppl 1.46 | bleu 85.27 | wps 620.5 | wpb 525.5 | bsz 18.9 | num_updates 8312 | best_loss 2.383
2021-02-01 01:02:12 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:02:18 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 20 @ 8312 updates, score 2.399) (writing took 6.152933595702052 seconds)
2021-02-01 01:02:18 | INFO | fairseq_cli.train | end of epoch 20 (average epoch stats below)
2021-02-01 01:02:18 | INFO | train | epoch 020 | loss 2.135 | nll_loss 0.256 | ppl 1.19 | wps 5283.9 | ups 8.1 | wpb 652.3 | bsz 24 | num_updates 8312 | lr 0.000121399 | gnorm 1.662 | loss_scale 0 | train_wall 38 | wall 1187
2021-02-01 01:02:18 | INFO | fairseq_cli.train | begin training epoch 20
2021-02-01 01:02:26 | INFO | train_inner | epoch 021:     88 / 416 loss=2.107, nll_loss=0.229, ppl=1.17, wps=2940.4, ups=4.48, wpb=656.3, bsz=25.1, num_updates=8400, lr=0.000120761, gnorm=1.821, loss_scale=0, train_wall=9, wall=1195
2021-02-01 01:02:35 | INFO | train_inner | epoch 021:    188 / 416 loss=2.136, nll_loss=0.26, ppl=1.2, wps=6932.5, ups=10.89, wpb=636.7, bsz=22.5, num_updates=8500, lr=0.000120049, gnorm=1.889, loss_scale=0, train_wall=9, wall=1204
2021-02-01 01:02:45 | INFO | train_inner | epoch 021:    288 / 416 loss=2.131, nll_loss=0.253, ppl=1.19, wps=7087.6, ups=10.91, wpb=649.4, bsz=24, num_updates=8600, lr=0.000119349, gnorm=1.601, loss_scale=0, train_wall=9, wall=1214
2021-02-01 01:02:54 | INFO | train_inner | epoch 021:    388 / 416 loss=2.143, nll_loss=0.268, ppl=1.2, wps=7133.6, ups=10.8, wpb=660.4, bsz=24.9, num_updates=8700, lr=0.000118661, gnorm=3.579, loss_scale=0, train_wall=9, wall=1223
2021-02-01 01:02:56 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:02:57 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:02:57 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:02:57 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:02:57 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:02:58 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:02:58 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:02:59 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:02:59 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:03:00 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk mail. Any time you mark the message as junk mail, the sender is removed from your list of junk mail.
2021-02-01 01:03:00 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:03:01 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you force Evolution to be offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:03:01 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:03:02 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:03:02 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:03:04 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From header as UNKNOWNTOKENINHYP example.com: UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages with headers, use a regular expression.
2021-02-01 01:03:04 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:03:04 | INFO | valid | epoch 021 | valid on 'valid' subset | loss 2.379 | nll_loss 0.538 | ppl 1.45 | bleu 86.25 | wps 597.4 | wpb 525.5 | bsz 18.9 | num_updates 8728 | best_loss 2.379
2021-02-01 01:03:04 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:03:24 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 21 @ 8728 updates, score 2.379) (writing took 20.59335452876985 seconds)
2021-02-01 01:03:24 | INFO | fairseq_cli.train | end of epoch 21 (average epoch stats below)
2021-02-01 01:03:24 | INFO | train | epoch 021 | loss 2.131 | nll_loss 0.253 | ppl 1.19 | wps 4106.5 | ups 6.3 | wpb 652.3 | bsz 24 | num_updates 8728 | lr 0.000118471 | gnorm 2.203 | loss_scale 0 | train_wall 38 | wall 1253
2021-02-01 01:03:24 | INFO | fairseq_cli.train | begin training epoch 21
2021-02-01 01:03:31 | INFO | train_inner | epoch 022:     72 / 416 loss=2.112, nll_loss=0.232, ppl=1.17, wps=1812.2, ups=2.7, wpb=671, bsz=24.3, num_updates=8800, lr=0.000117985, gnorm=1.42, loss_scale=0, train_wall=9, wall=1260
2021-02-01 01:03:40 | INFO | train_inner | epoch 022:    172 / 416 loss=2.124, nll_loss=0.249, ppl=1.19, wps=7239.6, ups=10.89, wpb=664.9, bsz=26.4, num_updates=8900, lr=0.00011732, gnorm=1.329, loss_scale=0, train_wall=9, wall=1269
2021-02-01 01:03:49 | INFO | train_inner | epoch 022:    272 / 416 loss=2.099, nll_loss=0.218, ppl=1.16, wps=6783.4, ups=10.81, wpb=627.8, bsz=22.8, num_updates=9000, lr=0.000116667, gnorm=1.388, loss_scale=0, train_wall=9, wall=1278
2021-02-01 01:03:59 | INFO | train_inner | epoch 022:    372 / 416 loss=2.115, nll_loss=0.238, ppl=1.18, wps=6813.4, ups=10.89, wpb=625.6, bsz=20.4, num_updates=9100, lr=0.000116024, gnorm=1.676, loss_scale=0, train_wall=9, wall=1288
2021-02-01 01:04:03 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:04:03 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:04:03 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:04:04 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:04:04 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:04:04 | INFO | fairseq.tasks.translation | example hypothesis: Remove an email address from your junk list in Novell Groupwise.
2021-02-01 01:04:04 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:04:05 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:04:05 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:04:06 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk mail. Any time you mark messages as junk mail, the sender is removed from your list of junk mail.
2021-02-01 01:04:06 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:04:07 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:04:07 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:04:08 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:04:08 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:04:10 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution defines as though the second declaration did not occur. To filter on messages that use multiple times, use a regular expression.
2021-02-01 01:04:10 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:04:10 | INFO | valid | epoch 022 | valid on 'valid' subset | loss 2.407 | nll_loss 0.568 | ppl 1.48 | bleu 85.92 | wps 609.4 | wpb 525.5 | bsz 18.9 | num_updates 9144 | best_loss 2.379
2021-02-01 01:04:10 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:04:15 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 22 @ 9144 updates, score 2.407) (writing took 5.656595090404153 seconds)
2021-02-01 01:04:15 | INFO | fairseq_cli.train | end of epoch 22 (average epoch stats below)
2021-02-01 01:04:15 | INFO | train | epoch 022 | loss 2.112 | nll_loss 0.234 | ppl 1.18 | wps 5294.1 | ups 8.12 | wpb 652.3 | bsz 24 | num_updates 9144 | lr 0.000115744 | gnorm 1.437 | loss_scale 0 | train_wall 38 | wall 1304
2021-02-01 01:04:15 | INFO | fairseq_cli.train | begin training epoch 22
2021-02-01 01:04:21 | INFO | train_inner | epoch 023:     56 / 416 loss=2.106, nll_loss=0.227, ppl=1.17, wps=3004.5, ups=4.53, wpb=663.9, bsz=27.7, num_updates=9200, lr=0.000115392, gnorm=1.435, loss_scale=0, train_wall=9, wall=1310
2021-02-01 01:04:30 | INFO | train_inner | epoch 023:    156 / 416 loss=2.102, nll_loss=0.224, ppl=1.17, wps=7264.5, ups=10.76, wpb=675.4, bsz=25.5, num_updates=9300, lr=0.00011477, gnorm=1.329, loss_scale=0, train_wall=9, wall=1319
2021-02-01 01:04:39 | INFO | train_inner | epoch 023:    256 / 416 loss=2.089, nll_loss=0.211, ppl=1.16, wps=6979.1, ups=10.8, wpb=646, bsz=23.4, num_updates=9400, lr=0.000114157, gnorm=1.009, loss_scale=0, train_wall=9, wall=1328
2021-02-01 01:04:48 | INFO | train_inner | epoch 023:    356 / 416 loss=2.121, nll_loss=0.244, ppl=1.18, wps=7099.1, ups=10.76, wpb=659.6, bsz=24.6, num_updates=9500, lr=0.000113555, gnorm=2.088, loss_scale=0, train_wall=9, wall=1338
2021-02-01 01:04:54 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:04:55 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:04:55 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:04:55 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:04:55 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:04:56 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail senders in Novell GroupWise.
2021-02-01 01:04:56 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:04:56 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:04:56 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:04:57 | INFO | fairseq.tasks.translation | example hypothesis: Whenever you mark messages as junk mail, the sender is added to your list of junk messages. Whenever you mark messages as junk mail, the sender is removed from your list of junk mail senders.
2021-02-01 01:04:57 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:04:58 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:04:58 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:04:59 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:04:59 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:05:01 | INFO | fairseq.tasks.translation | example hypothesis: If a message defines a header line multiple times, Evolution pays attention only to the first instance, even if the message defines the header line differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:01 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:01 | INFO | valid | epoch 023 | valid on 'valid' subset | loss 2.384 | nll_loss 0.546 | ppl 1.46 | bleu 86.49 | wps 615.5 | wpb 525.5 | bsz 18.9 | num_updates 9560 | best_loss 2.379
2021-02-01 01:05:01 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:05:06 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 23 @ 9560 updates, score 2.384) (writing took 5.339732639491558 seconds)
2021-02-01 01:05:06 | INFO | fairseq_cli.train | end of epoch 23 (average epoch stats below)
2021-02-01 01:05:06 | INFO | train | epoch 023 | loss 2.107 | nll_loss 0.229 | ppl 1.17 | wps 5325.8 | ups 8.16 | wpb 652.3 | bsz 24 | num_updates 9560 | lr 0.000113198 | gnorm 1.464 | loss_scale 0 | train_wall 38 | wall 1355
2021-02-01 01:05:06 | INFO | fairseq_cli.train | begin training epoch 23
2021-02-01 01:05:10 | INFO | train_inner | epoch 024:     40 / 416 loss=2.124, nll_loss=0.248, ppl=1.19, wps=2882.1, ups=4.61, wpb=624.6, bsz=21.1, num_updates=9600, lr=0.000112962, gnorm=1.321, loss_scale=0, train_wall=9, wall=1359
2021-02-01 01:05:19 | INFO | train_inner | epoch 024:    140 / 416 loss=2.106, nll_loss=0.229, ppl=1.17, wps=6908.8, ups=10.7, wpb=645.9, bsz=21.9, num_updates=9700, lr=0.000112378, gnorm=1.185, loss_scale=0, train_wall=9, wall=1369
2021-02-01 01:05:29 | INFO | train_inner | epoch 024:    240 / 416 loss=2.099, nll_loss=0.221, ppl=1.17, wps=6864.4, ups=10.84, wpb=633.1, bsz=23.6, num_updates=9800, lr=0.000111803, gnorm=1.074, loss_scale=0, train_wall=9, wall=1378
2021-02-01 01:05:38 | INFO | train_inner | epoch 024:    340 / 416 loss=2.103, nll_loss=0.227, ppl=1.17, wps=7145, ups=10.67, wpb=669.3, bsz=25.4, num_updates=9900, lr=0.000111237, gnorm=1.257, loss_scale=0, train_wall=9, wall=1387
2021-02-01 01:05:45 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:05:46 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:05:46 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:05:46 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:05:46 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:05:47 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail in Novell GroupWise.
2021-02-01 01:05:47 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:05:48 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:05:48 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:05:48 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk mail. Any time you mark messages as junk mail, the sender is removed from your list of junk mail.
2021-02-01 01:05:48 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:05:50 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:05:50 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:05:51 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, holidays, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:05:51 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:05:53 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:53 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:05:53 | INFO | valid | epoch 024 | valid on 'valid' subset | loss 2.376 | nll_loss 0.54 | ppl 1.45 | bleu 87.5 | wps 585.7 | wpb 525.5 | bsz 18.9 | num_updates 9976 | best_loss 2.376
2021-02-01 01:05:53 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:06:10 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 24 @ 9976 updates, score 2.376) (writing took 17.770359387621284 seconds)
2021-02-01 01:06:10 | INFO | fairseq_cli.train | end of epoch 24 (average epoch stats below)
2021-02-01 01:06:10 | INFO | train | epoch 024 | loss 2.1 | nll_loss 0.223 | ppl 1.17 | wps 4242.5 | ups 6.5 | wpb 652.3 | bsz 24 | num_updates 9976 | lr 0.000110813 | gnorm 1.168 | loss_scale 0 | train_wall 38 | wall 1419
2021-02-01 01:06:10 | INFO | fairseq_cli.train | begin training epoch 24
2021-02-01 01:06:13 | INFO | train_inner | epoch 025:     24 / 416 loss=2.089, nll_loss=0.213, ppl=1.16, wps=1985.4, ups=2.9, wpb=684.4, bsz=25.8, num_updates=10000, lr=0.00011068, gnorm=1.171, loss_scale=0, train_wall=9, wall=1422
2021-02-01 01:06:22 | INFO | train_inner | epoch 025:    124 / 416 loss=2.103, nll_loss=0.226, ppl=1.17, wps=7013.8, ups=10.76, wpb=652.1, bsz=23.6, num_updates=10100, lr=0.00011013, gnorm=1.278, loss_scale=0, train_wall=9, wall=1431
2021-02-01 01:06:31 | INFO | train_inner | epoch 025:    224 / 416 loss=2.086, nll_loss=0.209, ppl=1.16, wps=6783.2, ups=10.75, wpb=630.7, bsz=24, num_updates=10200, lr=0.000109589, gnorm=1.154, loss_scale=0, train_wall=9, wall=1440
2021-02-01 01:06:40 | INFO | train_inner | epoch 025:    324 / 416 loss=2.096, nll_loss=0.219, ppl=1.16, wps=6952.7, ups=10.72, wpb=648.6, bsz=24.1, num_updates=10300, lr=0.000109056, gnorm=1.088, loss_scale=0, train_wall=9, wall=1450
2021-02-01 01:06:49 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:06:50 | INFO | fairseq.tasks.translation | example hypothesis: Creates a filter based on whether there is an attachment for the email.
2021-02-01 01:06:50 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:06:50 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:06:50 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:06:51 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail senders in Novell GroupWise.
2021-02-01 01:06:51 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:06:51 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:06:51 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:06:52 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of junk mail. Any time you mark a message as junk mail, the sender is removed from your list of junk mail.
2021-02-01 01:06:52 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:06:53 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:06:53 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:06:55 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:06:55 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:06:56 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent--From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:06:56 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:06:56 | INFO | valid | epoch 025 | valid on 'valid' subset | loss 2.379 | nll_loss 0.544 | ppl 1.46 | bleu 86.85 | wps 599.5 | wpb 525.5 | bsz 18.9 | num_updates 10392 | best_loss 2.376
2021-02-01 01:06:56 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:07:02 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 25 @ 10392 updates, score 2.379) (writing took 5.927379888482392 seconds)
2021-02-01 01:07:02 | INFO | fairseq_cli.train | end of epoch 25 (average epoch stats below)
2021-02-01 01:07:02 | INFO | train | epoch 025 | loss 2.096 | nll_loss 0.219 | ppl 1.16 | wps 5228.4 | ups 8.02 | wpb 652.3 | bsz 24 | num_updates 10392 | lr 0.000108572 | gnorm 1.149 | loss_scale 0 | train_wall 38 | wall 1471
2021-02-01 01:07:02 | INFO | fairseq_cli.train | begin training epoch 25
2021-02-01 01:07:03 | INFO | train_inner | epoch 026:      8 / 416 loss=2.097, nll_loss=0.222, ppl=1.17, wps=2920.6, ups=4.42, wpb=660.9, bsz=23.8, num_updates=10400, lr=0.00010853, gnorm=1.014, loss_scale=0, train_wall=9, wall=1472
2021-02-01 01:07:13 | INFO | train_inner | epoch 026:    108 / 416 loss=2.092, nll_loss=0.215, ppl=1.16, wps=6980, ups=10.62, wpb=657.1, bsz=22, num_updates=10500, lr=0.000108012, gnorm=0.991, loss_scale=0, train_wall=9, wall=1482
2021-02-01 01:07:22 | INFO | train_inner | epoch 026:    208 / 416 loss=2.082, nll_loss=0.209, ppl=1.16, wps=7006.8, ups=10.61, wpb=660.6, bsz=25.8, num_updates=10600, lr=0.000107502, gnorm=0.994, loss_scale=0, train_wall=9, wall=1491
2021-02-01 01:07:31 | INFO | train_inner | epoch 026:    308 / 416 loss=2.079, nll_loss=0.206, ppl=1.15, wps=7079.8, ups=10.75, wpb=658.3, bsz=27.6, num_updates=10700, lr=0.000106998, gnorm=1.042, loss_scale=0, train_wall=9, wall=1500
2021-02-01 01:07:41 | INFO | train_inner | epoch 026:    408 / 416 loss=2.11, nll_loss=0.236, ppl=1.18, wps=6746.2, ups=10.54, wpb=640.2, bsz=21.4, num_updates=10800, lr=0.000106502, gnorm=1.291, loss_scale=0, train_wall=9, wall=1510
2021-02-01 01:07:41 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:07:42 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:07:42 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:07:43 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:07:43 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:07:43 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:07:43 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:07:44 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:07:44 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:07:45 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk, the sender is added to your junk list. Any time you mark a message as junk, the sender is removed from your list.
2021-02-01 01:07:45 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:07:46 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:07:46 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:07:47 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:07:47 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:07:49 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only, even if the message defines the header differently the second time. For example, if a message declares the header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:07:49 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:07:49 | INFO | valid | epoch 026 | valid on 'valid' subset | loss 2.38 | nll_loss 0.547 | ppl 1.46 | bleu 87.23 | wps 566.1 | wpb 525.5 | bsz 18.9 | num_updates 10808 | best_loss 2.376
2021-02-01 01:07:49 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:07:55 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 26 @ 10808 updates, score 2.38) (writing took 5.71379906591028 seconds)
2021-02-01 01:07:55 | INFO | fairseq_cli.train | end of epoch 26 (average epoch stats below)
2021-02-01 01:07:55 | INFO | train | epoch 026 | loss 2.092 | nll_loss 0.217 | ppl 1.16 | wps 5167.8 | ups 7.92 | wpb 652.3 | bsz 24 | num_updates 10808 | lr 0.000106462 | gnorm 1.087 | loss_scale 0 | train_wall 38 | wall 1524
2021-02-01 01:07:55 | INFO | fairseq_cli.train | begin training epoch 26
2021-02-01 01:08:03 | INFO | train_inner | epoch 027:     92 / 416 loss=2.088, nll_loss=0.214, ppl=1.16, wps=2840.8, ups=4.41, wpb=644.8, bsz=23.8, num_updates=10900, lr=0.000106012, gnorm=1.169, loss_scale=0, train_wall=9, wall=1532
2021-02-01 01:08:13 | INFO | train_inner | epoch 027:    192 / 416 loss=2.097, nll_loss=0.224, ppl=1.17, wps=7237.6, ups=10.93, wpb=662.1, bsz=23.6, num_updates=11000, lr=0.000105529, gnorm=1.342, loss_scale=0, train_wall=9, wall=1542
2021-02-01 01:08:22 | INFO | train_inner | epoch 027:    292 / 416 loss=2.088, nll_loss=0.214, ppl=1.16, wps=6946.7, ups=11.02, wpb=630.3, bsz=23.5, num_updates=11100, lr=0.000105053, gnorm=1.095, loss_scale=0, train_wall=9, wall=1551
2021-02-01 01:08:31 | INFO | train_inner | epoch 027:    392 / 416 loss=2.096, nll_loss=0.224, ppl=1.17, wps=7283.1, ups=10.82, wpb=673, bsz=24.6, num_updates=11200, lr=0.000104583, gnorm=1.241, loss_scale=0, train_wall=9, wall=1560
2021-02-01 01:08:33 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:08:34 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:08:35 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail in Novell GroupWise.
2021-02-01 01:08:35 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:08:35 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:08:35 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:08:36 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk, the sender is added to your list of junk senders. Any time you mark a message as junk, the sender is removed from your list of junk mail senders.
2021-02-01 01:08:36 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:08:37 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:08:37 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:08:39 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:08:39 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:08:40 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:08:40 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:08:40 | INFO | valid | epoch 027 | valid on 'valid' subset | loss 2.372 | nll_loss 0.526 | ppl 1.44 | bleu 86.78 | wps 616.6 | wpb 525.5 | bsz 18.9 | num_updates 11224 | best_loss 2.372
2021-02-01 01:08:40 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:09:01 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 27 @ 11224 updates, score 2.372) (writing took 20.925463049672544 seconds)
2021-02-01 01:09:01 | INFO | fairseq_cli.train | end of epoch 27 (average epoch stats below)
2021-02-01 01:09:01 | INFO | train | epoch 027 | loss 2.091 | nll_loss 0.217 | ppl 1.16 | wps 4096 | ups 6.28 | wpb 652.3 | bsz 24 | num_updates 11224 | lr 0.000104471 | gnorm 1.199 | loss_scale 0 | train_wall 38 | wall 1590
2021-02-01 01:09:01 | INFO | fairseq_cli.train | begin training epoch 27
2021-02-01 01:09:08 | INFO | train_inner | epoch 028:     76 / 416 loss=2.079, nll_loss=0.203, ppl=1.15, wps=1645.6, ups=2.7, wpb=610.2, bsz=22.3, num_updates=11300, lr=0.000104119, gnorm=1.503, loss_scale=0, train_wall=9, wall=1597
2021-02-01 01:09:17 | INFO | train_inner | epoch 028:    176 / 416 loss=2.102, nll_loss=0.229, ppl=1.17, wps=6887.1, ups=10.97, wpb=628.1, bsz=22.3, num_updates=11400, lr=0.000103661, gnorm=1.126, loss_scale=0, train_wall=9, wall=1606
2021-02-01 01:09:26 | INFO | train_inner | epoch 028:    276 / 416 loss=2.069, nll_loss=0.196, ppl=1.15, wps=7345.6, ups=10.78, wpb=681.3, bsz=27.4, num_updates=11500, lr=0.000103209, gnorm=0.829, loss_scale=0, train_wall=9, wall=1615
2021-02-01 01:09:36 | INFO | train_inner | epoch 028:    376 / 416 loss=2.07, nll_loss=0.197, ppl=1.15, wps=7501.3, ups=10.85, wpb=691.2, bsz=25.9, num_updates=11600, lr=0.000102764, gnorm=0.868, loss_scale=0, train_wall=9, wall=1625
2021-02-01 01:09:39 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:09:40 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment.
2021-02-01 01:09:40 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:09:40 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:09:40 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:09:41 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail senders in Novell Groupwise.
2021-02-01 01:09:41 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:09:42 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:09:42 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:09:42 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list of junk mail senders. Any time you mark messages as junk mail, the sender is removed from your list of junk mail senders.
2021-02-01 01:09:42 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:09:44 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:09:44 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:09:45 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:09:45 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:09:46 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:09:46 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:09:46 | INFO | valid | epoch 028 | valid on 'valid' subset | loss 2.371 | nll_loss 0.534 | ppl 1.45 | bleu 86.73 | wps 593.9 | wpb 525.5 | bsz 18.9 | num_updates 11640 | best_loss 2.371
2021-02-01 01:09:46 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:10:04 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_best.pt (epoch 28 @ 11640 updates, score 2.371) (writing took 18.01814539823681 seconds)
2021-02-01 01:10:04 | INFO | fairseq_cli.train | end of epoch 28 (average epoch stats below)
2021-02-01 01:10:04 | INFO | train | epoch 028 | loss 2.08 | nll_loss 0.207 | ppl 1.15 | wps 4272.3 | ups 6.55 | wpb 652.3 | bsz 24 | num_updates 11640 | lr 0.000102587 | gnorm 1.064 | loss_scale 0 | train_wall 38 | wall 1654
2021-02-01 01:10:04 | INFO | fairseq_cli.train | begin training epoch 28
2021-02-01 01:10:10 | INFO | train_inner | epoch 029:     60 / 416 loss=2.091, nll_loss=0.219, ppl=1.16, wps=1878.4, ups=2.9, wpb=647.6, bsz=21.2, num_updates=11700, lr=0.000102323, gnorm=0.956, loss_scale=0, train_wall=9, wall=1659
2021-02-01 01:10:19 | INFO | train_inner | epoch 029:    160 / 416 loss=2.076, nll_loss=0.203, ppl=1.15, wps=7508.6, ups=11.04, wpb=679.9, bsz=25.1, num_updates=11800, lr=0.000101889, gnorm=1.6, loss_scale=0, train_wall=9, wall=1668
2021-02-01 01:10:28 | INFO | train_inner | epoch 029:    260 / 416 loss=2.09, nll_loss=0.218, ppl=1.16, wps=6815.5, ups=10.81, wpb=630.5, bsz=23.5, num_updates=11900, lr=0.00010146, gnorm=1.124, loss_scale=0, train_wall=9, wall=1677
2021-02-01 01:10:38 | INFO | train_inner | epoch 029:    360 / 416 loss=2.074, nll_loss=0.203, ppl=1.15, wps=7044.2, ups=10.92, wpb=645.2, bsz=24.8, num_updates=12000, lr=0.000101036, gnorm=0.917, loss_scale=0, train_wall=9, wall=1687
2021-02-01 01:10:43 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:10:43 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:10:43 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:10:44 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:10:44 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:10:44 | INFO | fairseq.tasks.translation | example hypothesis: To remove an email address from your list of junk mail senders in Novell Groupwise.
2021-02-01 01:10:44 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:10:45 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions normally. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:10:45 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:10:46 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark messages as junk mail, the sender is added to your list. Any time you mark a message as junk mail, the sender is removed from your list.
2021-02-01 01:10:46 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:10:47 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:10:47 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:10:48 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:10:48 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:10:50 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:10:50 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:10:50 | INFO | valid | epoch 029 | valid on 'valid' subset | loss 2.392 | nll_loss 0.573 | ppl 1.49 | bleu 86.27 | wps 609.9 | wpb 525.5 | bsz 18.9 | num_updates 12056 | best_loss 2.371
2021-02-01 01:10:50 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:10:57 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 29 @ 12056 updates, score 2.392) (writing took 7.431892782449722 seconds)
2021-02-01 01:10:57 | INFO | fairseq_cli.train | end of epoch 29 (average epoch stats below)
2021-02-01 01:10:57 | INFO | train | epoch 029 | loss 2.081 | nll_loss 0.209 | ppl 1.16 | wps 5150.3 | ups 7.9 | wpb 652.3 | bsz 24 | num_updates 12056 | lr 0.000100801 | gnorm 1.168 | loss_scale 0 | train_wall 38 | wall 1706
2021-02-01 01:10:57 | INFO | fairseq_cli.train | begin training epoch 29
2021-02-01 01:11:01 | INFO | train_inner | epoch 030:     44 / 416 loss=2.071, nll_loss=0.199, ppl=1.15, wps=2777.8, ups=4.17, wpb=665.4, bsz=24.8, num_updates=12100, lr=0.000100618, gnorm=0.991, loss_scale=0, train_wall=9, wall=1711
2021-02-01 01:11:11 | INFO | train_inner | epoch 030:    144 / 416 loss=2.071, nll_loss=0.198, ppl=1.15, wps=6878.9, ups=10.82, wpb=635.5, bsz=23.5, num_updates=12200, lr=0.000100205, gnorm=0.859, loss_scale=0, train_wall=9, wall=1720
2021-02-01 01:11:20 | INFO | train_inner | epoch 030:    244 / 416 loss=2.079, nll_loss=0.207, ppl=1.15, wps=7155.5, ups=10.97, wpb=652.4, bsz=25.4, num_updates=12300, lr=9.97965e-05, gnorm=0.783, loss_scale=0, train_wall=9, wall=1729
2021-02-01 01:11:29 | INFO | train_inner | epoch 030:    344 / 416 loss=2.091, nll_loss=0.222, ppl=1.17, wps=7043.3, ups=10.69, wpb=658.8, bsz=21.5, num_updates=12400, lr=9.93933e-05, gnorm=0.937, loss_scale=0, train_wall=9, wall=1738
2021-02-01 01:11:36 | INFO | fairseq_cli.train | begin validation on "valid" subset
2021-02-01 01:11:36 | INFO | fairseq.tasks.translation | example hypothesis: Checks whether there is an attachment for the email.
2021-02-01 01:11:36 | INFO | fairseq.tasks.translation | example reference: Checks whether there is an attachment for the email.
2021-02-01 01:11:37 | INFO | fairseq.tasks.translation | example hypothesis: Using an online WebDAV task list or memo list.
2021-02-01 01:11:37 | INFO | fairseq.tasks.translation | example reference: Using an online WebDAV task list or memo list.
2021-02-01 01:11:37 | INFO | fairseq.tasks.translation | example hypothesis: Removing an email address from your list of junk mail senders in Novell GroupWise.
2021-02-01 01:11:37 | INFO | fairseq.tasks.translation | example reference: How to remove an email address from your junk mail list in Novell Groupwise.
2021-02-01 01:11:38 | INFO | fairseq.tasks.translation | example hypothesis: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:11:38 | INFO | fairseq.tasks.translation | example reference: Define the conditions for the rule. For each condition, you first select which part of the message will be checked and then define the comparison.
2021-02-01 01:11:39 | INFO | fairseq.tasks.translation | example hypothesis: Any time you mark a message as junk mail, the sender is added to your list of junk mail senders. Any time you mark a message as junk mail, the sender is removed from your list of junk mail.
2021-02-01 01:11:39 | INFO | fairseq.tasks.translation | example reference: Each time you flag a message as Junk, the sender is added to your Spam List; each time you flag a message as Not Junk, the sender is removed from your Spam List.
2021-02-01 01:11:40 | INFO | fairseq.tasks.translation | example hypothesis: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:11:40 | INFO | fairseq.tasks.translation | example reference: POP mail downloads all messages to your local system, but other connections usually download just the headers, and get the rest only when you want to read the message. Before you go offline, Evolution downloads the unread messages from the folders you have chosen to store.
2021-02-01 01:11:41 | INFO | fairseq.tasks.translation | example hypothesis: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINHYP s Mailbox.
2021-02-01 01:11:41 | INFO | fairseq.tasks.translation | example reference: Shared Memos are like mail messages except they are scheduled for a particular day and appear on the calendar for that date. You can use shared memos to show vacations, holidays, pay days, birthdays, and so on. Posted shared memos are placed in your Calendar on the date you specify. They are not placed in your Mailbox or in any other user UNKNOWNTOKENINREF s Mailbox.
2021-02-01 01:11:43 | INFO | fairseq.tasks.translation | example hypothesis: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINHYP engineering @ example.com UNKNOWNTOKENINHYP and then restates it as UNKNOWNTOKENINHYP marketing @ example.com UNKNOWNTOKENINHYP, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:11:43 | INFO | fairseq.tasks.translation | example reference: If a message uses a header more than once, Evolution pays attention only to the first instance, even if the message defines the header differently the second time. For example, if a message declares the Resent-From: header as UNKNOWNTOKENINREF engineering @ example.com UNKNOWNTOKENINREF and then restates it as UNKNOWNTOKENINREF marketing @ example.com UNKNOWNTOKENINREF, Evolution filters as though the second declaration did not occur. To filter on messages that use headers multiple times, use a regular expression.
2021-02-01 01:11:43 | INFO | valid | epoch 030 | valid on 'valid' subset | loss 2.386 | nll_loss 0.557 | ppl 1.47 | bleu 86.63 | wps 603 | wpb 525.5 | bsz 18.9 | num_updates 12472 | best_loss 2.371
2021-02-01 01:11:43 | INFO | fairseq_cli.train | begin save checkpoint
2021-02-01 01:11:49 | INFO | fairseq.checkpoint_utils | saved checkpoint ../checkpoints/GNOME_20/checkpoint_last.pt (epoch 30 @ 12472 updates, score 2.386) (writing took 5.707306406460702 seconds)
2021-02-01 01:11:49 | INFO | fairseq_cli.train | end of epoch 30 (average epoch stats below)
2021-02-01 01:11:49 | INFO | train | epoch 030 | loss 2.076 | nll_loss 0.205 | ppl 1.15 | wps 5275.5 | ups 8.09 | wpb 652.3 | bsz 24 | num_updates 12472 | lr 9.9106e-05 | gnorm 0.832 | loss_scale 0 | train_wall 38 | wall 1758
2021-02-01 01:11:49 | INFO | fairseq_cli.train | done training in 1753.5 seconds


###############################################################################
Peregrine Cluster
Job 17762482 for user 's3475743'
Finished at: Mon Feb  1 01:11:53 CET 2021

Job details:
============

Job ID              : 17762482
Name                : GNOME_20
User                : s3475743
Partition           : gpu
Nodes               : pg-gpu24
Number of Nodes     : 1
Cores               : 12
State               : COMPLETED
Submit              : 2021-02-01T00:30:17
Start               : 2021-02-01T00:42:11
End                 : 2021-02-01T01:11:52
Reserved walltime   : 23:55:00
Used walltime       : 00:29:41
Used CPU time       : 00:30:00 (efficiency:  8.43%)
% User (Computation): 69.22%
% System (I/O)      : 30.78%
Mem reserved        : 32G/node
Max Mem used        : 5.61G (pg-gpu24)
Max Disk Write      : 40.96K (pg-gpu24)
Max Disk Read       : 2.30M (pg-gpu24)
Average GPU usage   : 70.7% (pg-gpu24)


Acknowledgements:
=================

Please see this page for information about acknowledging Peregrine in your publications:

https://wiki.hpc.rug.nl/peregrine/introduction/scientific_output

################################################################################
